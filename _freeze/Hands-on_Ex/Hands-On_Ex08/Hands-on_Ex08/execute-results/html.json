{
  "hash": "9e1d49fb1cc662c67ba3c6cfb8b3dcd2",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Hands On Exercise 8\"\nauthor: \"Dew Stella Chan\"\ndate: \"October 20, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n\n\nGeographically Weighted Predictive Models\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse)\n```\n:::\n\n\n\n## Data Preparation\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n\nReducing the number of data to 100 for faster computation\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nmdata <- mdata[sample(nrow(mdata), 100, replace = TRUE), ]\n\nwrite_rds(mdata, \"data/rds/mdata.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/rds/mdata.rds\")\n```\n:::\n\n\n\n\n## Partitioning Dataset\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(mdata, \n                              prop = 6.5/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n\nwrite_rds(train_data, \"data/rds/train_data.rds\")\nwrite_rds(test_data, \"data/rds/test_data.rds\")\n```\n:::\n\n\n\n## Computing correlation Matrix\nRetrieving stored Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- read_rds(\"data/rds/train_data.rds\")\ntest_data <- read_rds(\"data/rds/test_data.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata%>%\n  st_drop_geometry()\ncorrplot::corrplot(cor(mdata_nogeo[, 2:17]), \n                   diag = FALSE, \n                   order = \"AOE\",\n                   tl.pos = \"td\", \n                   tl.cex = 0.5, \n                   method = \"number\", \n                   type = \"upper\")\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex08_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n\nBuilding a non-spatial multiple linear regression\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nsummary(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\nCall:\nlm(formula = resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths + \n    PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK + \n    PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data)\n\nResiduals:\n    Min      1Q  Median      3Q     Max \n-142024  -41569    4155   48792  110986 \n\nCoefficients:\n                          Estimate Std. Error t value Pr(>|t|)    \n(Intercept)              142126.48  153078.73   0.928   0.3576    \nfloor_area_sqm             2194.98    1310.48   1.675   0.1002    \nstorey_order              20719.95    4397.98   4.711 2.00e-05 ***\nremaining_lease_mths        339.77      71.58   4.747 1.77e-05 ***\nPROX_CBD                 -16109.46    2969.03  -5.426 1.68e-06 ***\nPROX_ELDERLYCARE         -19600.23   13544.34  -1.447   0.1541    \nPROX_HAWKER               -2953.48   17348.03  -0.170   0.8655    \nPROX_MRT                  -7089.48   23403.86  -0.303   0.7632    \nPROX_PARK                -35240.84   21712.60  -1.623   0.1109    \nPROX_MALL                -27060.78   34831.45  -0.777   0.4409    \nPROX_SUPERMARKET         -13410.05   68312.85  -0.196   0.8452    \nWITHIN_350M_KINDERGARTEN  16416.09   11064.43   1.484   0.1442    \nWITHIN_350M_CHILDCARE      3602.03    5529.58   0.651   0.5178    \nWITHIN_350M_BUS           -2047.67    3423.83  -0.598   0.5525    \nWITHIN_1KM_PRISCH        -12473.83    7128.02  -1.750   0.0863 .  \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n\nResidual standard error: 64380 on 50 degrees of freedom\nMultiple R-squared:  0.8085,\tAdjusted R-squared:  0.7549 \nF-statistic: 15.08 on 14 and 50 DF,  p-value: 2.466e-13\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(price_mlr, \"data/rds/price_mlr.rds\" ) \n```\n:::\n\n\n\n## gwr predictive method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_sp <- as_Spatial(train_data)\ntrain_data_sp\n```\n:::\n\n\n\n### Computing adaptive bandwidth\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n\n\nWriting to rds folder so it will not need ot be re-run\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(bw_adaptive, \"data/rds/bw_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- read_rds(\"data/rds/bw_adaptive.rds\")\n```\n:::\n\n\n\n### Constructing the adaptive bandwidth gwr model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data_sp,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n                          \nwrite_rds(gwr_adaptive, \"data/rds/gwr_adaptive.rds\")  \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- read_rds(\"data/rds/gwr_adaptive.rds\")\ngwr_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-10 22:25:38.686551 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data_sp, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 65\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-142024  -41569    4155   48792  110986 \n\n   Coefficients:\n                             Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)              142126.48  153078.73   0.928   0.3576    \n   floor_area_sqm             2194.98    1310.48   1.675   0.1002    \n   storey_order              20719.95    4397.98   4.711 2.00e-05 ***\n   remaining_lease_mths        339.77      71.58   4.747 1.77e-05 ***\n   PROX_CBD                 -16109.46    2969.03  -5.426 1.68e-06 ***\n   PROX_ELDERLYCARE         -19600.23   13544.34  -1.447   0.1541    \n   PROX_HAWKER               -2953.48   17348.03  -0.170   0.8655    \n   PROX_MRT                  -7089.48   23403.86  -0.303   0.7632    \n   PROX_PARK                -35240.84   21712.60  -1.623   0.1109    \n   PROX_MALL                -27060.78   34831.45  -0.777   0.4409    \n   PROX_SUPERMARKET         -13410.05   68312.85  -0.196   0.8452    \n   WITHIN_350M_KINDERGARTEN  16416.09   11064.43   1.484   0.1442    \n   WITHIN_350M_CHILDCARE      3602.03    5529.58   0.651   0.5178    \n   WITHIN_350M_BUS           -2047.67    3423.83  -0.598   0.5525    \n   WITHIN_1KM_PRISCH        -12473.83    7128.02  -1.750   0.0863 .  \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 64380 on 50 degrees of freedom\n   Multiple R-squared: 0.8085\n   Adjusted R-squared: 0.7549 \n   F-statistic: 15.08 on 14 and 50 DF,  p-value: 2.466e-13 \n   ***Extra Diagnostic information\n   Residual sum of squares: 2.07229e+11\n   Sigma(hat): 57352.84\n   AIC:  1638.838\n   AICc:  1650.171\n   BIC:  1675.418\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 19 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                   Min.     1st Qu.      Median     3rd Qu.\n   Intercept                -277478.664  -87784.921   81526.728  126224.625\n   floor_area_sqm              1119.948    1855.358    3404.630    5568.136\n   storey_order                9976.488   12038.142   14280.456   19736.366\n   remaining_lease_mths         162.956     196.692     291.226     357.415\n   PROX_CBD                  -18500.594  -17423.054  -14150.912  -10169.474\n   PROX_ELDERLYCARE          -39124.442  -25248.802  -20521.387  -13394.058\n   PROX_HAWKER                -8787.233   -4548.600    1357.056   11796.150\n   PROX_MRT                  -76256.152  -51450.829  -23020.549   -3172.203\n   PROX_PARK                -109521.544  -70799.634  -43483.645  -28401.408\n   PROX_MALL                 -45980.372  -16254.642      74.766   56402.868\n   PROX_SUPERMARKET         -210177.019 -168873.060  -61798.975     669.916\n   WITHIN_350M_KINDERGARTEN    4062.545    8665.901   10363.685   15656.314\n   WITHIN_350M_CHILDCARE       2343.150    3546.930    3976.271    4856.170\n   WITHIN_350M_BUS            -3621.060   -1738.696   -1500.701     116.094\n   WITHIN_1KM_PRISCH         -13921.461  -13312.692  -11309.094   -9901.745\n                                 Max.\n   Intercept                216991.76\n   floor_area_sqm             6826.71\n   storey_order              21781.08\n   remaining_lease_mths        420.24\n   PROX_CBD                  -4425.57\n   PROX_ELDERLYCARE          -8564.56\n   PROX_HAWKER               20743.07\n   PROX_MRT                   6247.34\n   PROX_PARK                -17873.18\n   PROX_MALL                129409.07\n   PROX_SUPERMARKET          35068.65\n   WITHIN_350M_KINDERGARTEN  20872.19\n   WITHIN_350M_CHILDCARE      7606.44\n   WITHIN_350M_BUS            2754.42\n   WITHIN_1KM_PRISCH         -6472.85\n   ************************Diagnostic information*************************\n   Number of data points: 65 \n   Effective number of parameters (2trace(S) - trace(S'S)): 34.12838 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 30.87162 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 1668.067 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 1586.359 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 1611.322 \n   Residual sum of squares: 97784295934 \n   R-square value:  0.9096332 \n   Adjusted R-square value:  0.806389 \n\n   ***********************************************************************\n   Program stops at: 2024-11-10 22:25:38.799084 \n```\n\n\n:::\n:::\n\n\n\n### Converting the test data from sf data.frame to SpatialPointDataFrame\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_sp <- test_data %>%\n  as_Spatial()\ntest_data_sp\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data_sp,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n:::\n\n\n\nThe result shows that 34 neighbour points will be the optimal bandwidth for the test data. We will use the optimal data for the bandwidth.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwr_bw_test_adaptive, \"data/rds/gwr_bw_test_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- read_rds(\"data/rds/gwr_bw_test_adaptive.rds\")\n```\n:::\n\n\n\n14.8.7 Computing predicted values of the test data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET +WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data_sp, \n                        predictdata = test_data_sp, \n                        bw=25, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwr_pred, \"data/rds/gwr_pred.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_prede <- read_rds(\"data/rds/gwr_pred.rds\")\n```\n:::\n\n\n\n## Preparing coordinates data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(mdata)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords_train <- write_rds(coords_train, \"data/rds/coords_train.rds\" )\ncoords_test <- write_rds(coords_test, \"data/rds/oords_test.rds\" )\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data <- train_data %>% \n  st_drop_geometry()\n```\n:::\n\n\n\n## Calibrating Random Forest Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data)\nwrite_rds(rf, \"data/rds/rf.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrf <- read_rds(\"data/rds/rf.rds\")\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      65 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       10414167648 \nR squared (OOB):                  0.3840517 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + storey_order +\n                       remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE +\n                       PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL +\n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(gwRF_adaptive, \"data/rds/gwRF_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_adaptive <- read_rds(\"data/rds/gwRF_adaptive.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data <- cbind(test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n\nPredicting with test data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n\n\nwrite_rds(gwRF_pred, \"data/rds/gwRF_pred.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred <- read_rds(\"data/rds/gwRF_pred.rds\")\nGRF_pred_df <- as.data.frame(GRF_pred)\n\n\n\ntest_data_p <- cbind(test_data, GRF_pred_df)\nwrite_rds(test_data_p, \"data/rds/test_data_p.rds\")\n```\n:::\n\n\n\n### Calculating Root Mean Square Error\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrmse(test_data_p$resale_price, \n     test_data_p$GRF_pred)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 67571.46\n```\n\n\n:::\n:::\n\n\n\n### Visualising the predicted values\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_p,\n       aes(x = GRF_pred,\n           y = resale_price)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](Hands-on_Ex08_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Hands-on_Ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}