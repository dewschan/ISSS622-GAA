{
  "hash": "8fec4630c2f9171ce7dd95d949471359",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 08\"\nauthor: \"Dew Stella Chan\"\ndate: \"October 21, 2024\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, spdep, GWmodel, SpatialML, \n               tmap, rsample, Metrics, tidyverse,\n               knitr, kableExtra)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata <- read_rds(\"data/mdata.rds\")\n```\n:::\n\n\n\n## Data Sampling\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nHDB_sample <- mdata %>%\n  sample_n(100) # set small for faster computating time, for actual modelling, it should be larger\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\noverlapping_points <- HDB_sample %>%\n  mutate(overlap = lengths(st_equals(., .)) > 1)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nHDB_sample <- HDB_sample %>%\n  st_jitter(amount = 5)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nresale_split <- initial_split(HDB_sample, \n                              prop = 6.67/10,)\ntrain_data <- training(resale_split)\ntest_data <- testing(resale_split)\n```\n:::\n\n\n\n\n## Multicollinearity check\nIn order to avoid multicollineariy. In the code chunk below, ggcorrmat() of ggstatsplot is used to plot a correlation matrix to check if there are pairs of highly correlated independent variables.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmdata_nogeo <- mdata %>%\n  st_drop_geometry()\nggstatsplot::ggcorrmat(mdata_nogeo[, 2:17])\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex08_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n\n## Building a non-spatial multiple linear regression\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprice_mlr <- lm(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                data=train_data)\nolsrr::ols_regress(price_mlr)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                              Model Summary                                \n--------------------------------------------------------------------------\nR                           0.930       RMSE                    50176.478 \nR-Squared                   0.865       MSE                3258172804.064 \nAdj. R-Squared              0.828       Coef. Var                  13.495 \nPred R-Squared              0.769       AIC                      1647.976 \nMAE                     39005.740       SBC                      1683.010 \n--------------------------------------------------------------------------\n RMSE: Root Mean Square Error \n MSE: Mean Square Error \n MAE: Mean Absolute Error \n AIC: Akaike Information Criteria \n SBC: Schwarz Bayesian Criteria \n\n                                     ANOVA                                       \n--------------------------------------------------------------------------------\n                        Sum of                                                  \n                       Squares        DF        Mean Square      F         Sig. \n--------------------------------------------------------------------------------\nRegression         1.06558e+12        14    76112868601.230    23.361    0.0000 \nResidual      166166813007.259        51     3258172804.064                     \nTotal             1.231747e+12        65                                        \n--------------------------------------------------------------------------------\n\n                                               Parameter Estimates                                                 \n------------------------------------------------------------------------------------------------------------------\n                   model          Beta    Std. Error    Std. Beta      t        Sig           lower         upper \n------------------------------------------------------------------------------------------------------------------\n             (Intercept)    163031.951    138252.724                  1.179    0.244    -114521.975    440585.877 \n          floor_area_sqm      2466.979      1323.166        0.116     1.864    0.068       -189.388      5123.345 \n            storey_order     22360.527      3972.410        0.397     5.629    0.000      14385.582     30335.473 \n    remaining_lease_mths       286.583        57.068        0.344     5.022    0.000        172.015       401.152 \n                PROX_CBD    -14435.823      2274.445       -0.499    -6.347    0.000     -19001.962     -9869.684 \n        PROX_ELDERLYCARE    -11514.949     11084.052       -0.064    -1.039    0.304     -33767.112     10737.214 \n             PROX_HAWKER      3003.249     20186.947        0.009     0.149    0.882     -37523.738     43530.236 \n                PROX_MRT    -15499.764     21678.241       -0.047    -0.715    0.478     -59020.650     28021.121 \n               PROX_PARK    -28154.553     18510.719       -0.090    -1.521    0.134     -65316.372      9007.267 \n               PROX_MALL    -64609.885     32854.500       -0.133    -1.967    0.055    -130568.046      1348.275 \n        PROX_SUPERMARKET    -34853.284     54377.735       -0.040    -0.641    0.524    -144021.142     74314.573 \nWITHIN_350M_KINDERGARTEN     14323.215      8285.134        0.112     1.729    0.090      -2309.885     30956.316 \n   WITHIN_350M_CHILDCARE      -283.524      5246.463       -0.004    -0.054    0.957     -10816.238     10249.189 \n         WITHIN_350M_BUS       554.267      2972.095        0.011     0.186    0.853      -5412.463      6520.998 \n       WITHIN_1KM_PRISCH    -15585.342      6547.146       -0.172    -2.380    0.021     -28729.285     -2441.398 \n------------------------------------------------------------------------------------------------------------------\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nvif <- performance::check_collinearity(price_mlr)\nkable(vif, \n      caption = \"Variance Inflation Factor (VIF) Results\") %>%\n  kable_styling(font_size = 18) \n```\n\n::: {.cell-output-display}\n`````{=html}\n<table class=\"table\" style=\"font-size: 18px; margin-left: auto; margin-right: auto;\">\n<caption style=\"font-size: initial !important;\">Variance Inflation Factor (VIF) Results</caption>\n <thead>\n  <tr>\n   <th style=\"text-align:left;\"> Term </th>\n   <th style=\"text-align:right;\"> VIF </th>\n   <th style=\"text-align:right;\"> VIF_CI_low </th>\n   <th style=\"text-align:right;\"> VIF_CI_high </th>\n   <th style=\"text-align:right;\"> SE_factor </th>\n   <th style=\"text-align:right;\"> Tolerance </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_low </th>\n   <th style=\"text-align:right;\"> Tolerance_CI_high </th>\n  </tr>\n </thead>\n<tbody>\n  <tr>\n   <td style=\"text-align:left;\"> floor_area_sqm </td>\n   <td style=\"text-align:right;\"> 1.466150 </td>\n   <td style=\"text-align:right;\"> 1.222173 </td>\n   <td style=\"text-align:right;\"> 1.978048 </td>\n   <td style=\"text-align:right;\"> 1.210847 </td>\n   <td style=\"text-align:right;\"> 0.6820585 </td>\n   <td style=\"text-align:right;\"> 0.5055489 </td>\n   <td style=\"text-align:right;\"> 0.8182149 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> storey_order </td>\n   <td style=\"text-align:right;\"> 1.879755 </td>\n   <td style=\"text-align:right;\"> 1.502147 </td>\n   <td style=\"text-align:right;\"> 2.541320 </td>\n   <td style=\"text-align:right;\"> 1.371042 </td>\n   <td style=\"text-align:right;\"> 0.5319841 </td>\n   <td style=\"text-align:right;\"> 0.3934963 </td>\n   <td style=\"text-align:right;\"> 0.6657137 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> remaining_lease_mths </td>\n   <td style=\"text-align:right;\"> 1.777528 </td>\n   <td style=\"text-align:right;\"> 1.432098 </td>\n   <td style=\"text-align:right;\"> 2.399103 </td>\n   <td style=\"text-align:right;\"> 1.333239 </td>\n   <td style=\"text-align:right;\"> 0.5625792 </td>\n   <td style=\"text-align:right;\"> 0.4168224 </td>\n   <td style=\"text-align:right;\"> 0.6982764 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_CBD </td>\n   <td style=\"text-align:right;\"> 2.334239 </td>\n   <td style=\"text-align:right;\"> 1.816139 </td>\n   <td style=\"text-align:right;\"> 3.181239 </td>\n   <td style=\"text-align:right;\"> 1.527822 </td>\n   <td style=\"text-align:right;\"> 0.4284051 </td>\n   <td style=\"text-align:right;\"> 0.3143429 </td>\n   <td style=\"text-align:right;\"> 0.5506187 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_ELDERLYCARE </td>\n   <td style=\"text-align:right;\"> 1.454152 </td>\n   <td style=\"text-align:right;\"> 1.214273 </td>\n   <td style=\"text-align:right;\"> 1.962578 </td>\n   <td style=\"text-align:right;\"> 1.205882 </td>\n   <td style=\"text-align:right;\"> 0.6876859 </td>\n   <td style=\"text-align:right;\"> 0.5095338 </td>\n   <td style=\"text-align:right;\"> 0.8235382 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_HAWKER </td>\n   <td style=\"text-align:right;\"> 1.391702 </td>\n   <td style=\"text-align:right;\"> 1.173566 </td>\n   <td style=\"text-align:right;\"> 1.883988 </td>\n   <td style=\"text-align:right;\"> 1.179704 </td>\n   <td style=\"text-align:right;\"> 0.7185445 </td>\n   <td style=\"text-align:right;\"> 0.5307889 </td>\n   <td style=\"text-align:right;\"> 0.8521035 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MRT </td>\n   <td style=\"text-align:right;\"> 1.616096 </td>\n   <td style=\"text-align:right;\"> 1.322367 </td>\n   <td style=\"text-align:right;\"> 2.177461 </td>\n   <td style=\"text-align:right;\"> 1.271258 </td>\n   <td style=\"text-align:right;\"> 0.6187751 </td>\n   <td style=\"text-align:right;\"> 0.4592504 </td>\n   <td style=\"text-align:right;\"> 0.7562199 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_PARK </td>\n   <td style=\"text-align:right;\"> 1.322259 </td>\n   <td style=\"text-align:right;\"> 1.129420 </td>\n   <td style=\"text-align:right;\"> 1.802431 </td>\n   <td style=\"text-align:right;\"> 1.149895 </td>\n   <td style=\"text-align:right;\"> 0.7562813 </td>\n   <td style=\"text-align:right;\"> 0.5548062 </td>\n   <td style=\"text-align:right;\"> 0.8854098 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_MALL </td>\n   <td style=\"text-align:right;\"> 1.736450 </td>\n   <td style=\"text-align:right;\"> 1.404054 </td>\n   <td style=\"text-align:right;\"> 2.342291 </td>\n   <td style=\"text-align:right;\"> 1.317744 </td>\n   <td style=\"text-align:right;\"> 0.5758876 </td>\n   <td style=\"text-align:right;\"> 0.4269324 </td>\n   <td style=\"text-align:right;\"> 0.7122233 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> PROX_SUPERMARKET </td>\n   <td style=\"text-align:right;\"> 1.462845 </td>\n   <td style=\"text-align:right;\"> 1.219995 </td>\n   <td style=\"text-align:right;\"> 1.973777 </td>\n   <td style=\"text-align:right;\"> 1.209482 </td>\n   <td style=\"text-align:right;\"> 0.6835992 </td>\n   <td style=\"text-align:right;\"> 0.5066428 </td>\n   <td style=\"text-align:right;\"> 0.8196757 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_KINDERGARTEN </td>\n   <td style=\"text-align:right;\"> 1.577233 </td>\n   <td style=\"text-align:right;\"> 1.296189 </td>\n   <td style=\"text-align:right;\"> 2.124951 </td>\n   <td style=\"text-align:right;\"> 1.255879 </td>\n   <td style=\"text-align:right;\"> 0.6340217 </td>\n   <td style=\"text-align:right;\"> 0.4705990 </td>\n   <td style=\"text-align:right;\"> 0.7714925 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_CHILDCARE </td>\n   <td style=\"text-align:right;\"> 1.749013 </td>\n   <td style=\"text-align:right;\"> 1.412623 </td>\n   <td style=\"text-align:right;\"> 2.359642 </td>\n   <td style=\"text-align:right;\"> 1.322502 </td>\n   <td style=\"text-align:right;\"> 0.5717511 </td>\n   <td style=\"text-align:right;\"> 0.4237931 </td>\n   <td style=\"text-align:right;\"> 0.7079028 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_350M_BUS </td>\n   <td style=\"text-align:right;\"> 1.287749 </td>\n   <td style=\"text-align:right;\"> 1.108122 </td>\n   <td style=\"text-align:right;\"> 1.765791 </td>\n   <td style=\"text-align:right;\"> 1.134790 </td>\n   <td style=\"text-align:right;\"> 0.7765491 </td>\n   <td style=\"text-align:right;\"> 0.5663184 </td>\n   <td style=\"text-align:right;\"> 0.9024273 </td>\n  </tr>\n  <tr>\n   <td style=\"text-align:left;\"> WITHIN_1KM_PRISCH </td>\n   <td style=\"text-align:right;\"> 1.967248 </td>\n   <td style=\"text-align:right;\"> 1.562328 </td>\n   <td style=\"text-align:right;\"> 2.663742 </td>\n   <td style=\"text-align:right;\"> 1.402586 </td>\n   <td style=\"text-align:right;\"> 0.5083243 </td>\n   <td style=\"text-align:right;\"> 0.3754118 </td>\n   <td style=\"text-align:right;\"> 0.6400704 </td>\n  </tr>\n</tbody>\n</table>\n\n`````\n:::\n:::\n\n\n\n## Predictive Modelling with gwr\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbw_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=train_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 48 CV score: 283953485017 \nAdaptive bandwidth: 38 CV score: 282574296045 \nAdaptive bandwidth: 30 CV score: 289411063981 \nAdaptive bandwidth: 41 CV score: 283492653979 \nAdaptive bandwidth: 34 CV score: 283927949277 \nAdaptive bandwidth: 38 CV score: 282574296045 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive <- gwr.basic(formula = resale_price ~\n                            floor_area_sqm + storey_order +\n                            remaining_lease_mths + PROX_CBD + \n                            PROX_ELDERLYCARE + PROX_HAWKER +\n                            PROX_MRT + PROX_PARK + PROX_MALL + \n                            PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                            WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                            WITHIN_1KM_PRISCH,\n                          data=train_data,\n                          bw=bw_adaptive, \n                          kernel = 'gaussian', \n                          adaptive=TRUE,\n                          longlat = FALSE)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_adaptive\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   ***********************************************************************\n   *                       Package   GWmodel                             *\n   ***********************************************************************\n   Program starts at: 2024-11-09 23:08:12.348258 \n   Call:\n   gwr.basic(formula = resale_price ~ floor_area_sqm + storey_order + \n    remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n    PROX_MRT + PROX_PARK + PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN + \n    WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH, \n    data = train_data, bw = bw_adaptive, kernel = \"gaussian\", \n    adaptive = TRUE, longlat = FALSE)\n\n   Dependent (y) variable:  resale_price\n   Independent variables:  floor_area_sqm storey_order remaining_lease_mths PROX_CBD PROX_ELDERLYCARE PROX_HAWKER PROX_MRT PROX_PARK PROX_MALL PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN WITHIN_350M_CHILDCARE WITHIN_350M_BUS WITHIN_1KM_PRISCH\n   Number of data points: 66\n   ***********************************************************************\n   *                    Results of Global Regression                     *\n   ***********************************************************************\n\n   Call:\n    lm(formula = formula, data = data)\n\n   Residuals:\n    Min      1Q  Median      3Q     Max \n-151630  -27336     876   31007   93563 \n\n   Coefficients:\n                             Estimate Std. Error t value Pr(>|t|)    \n   (Intercept)              163031.95  138252.72   1.179   0.2438    \n   floor_area_sqm             2466.98    1323.17   1.864   0.0680 .  \n   storey_order              22360.53    3972.41   5.629 7.77e-07 ***\n   remaining_lease_mths        286.58      57.07   5.022 6.63e-06 ***\n   PROX_CBD                 -14435.82    2274.45  -6.347 5.85e-08 ***\n   PROX_ELDERLYCARE         -11514.95   11084.05  -1.039   0.3038    \n   PROX_HAWKER                3003.25   20186.95   0.149   0.8823    \n   PROX_MRT                 -15499.76   21678.24  -0.715   0.4779    \n   PROX_PARK                -28154.55   18510.72  -1.521   0.1344    \n   PROX_MALL                -64609.89   32854.50  -1.967   0.0547 .  \n   PROX_SUPERMARKET         -34853.28   54377.73  -0.641   0.5244    \n   WITHIN_350M_KINDERGARTEN  14323.22    8285.13   1.729   0.0899 .  \n   WITHIN_350M_CHILDCARE      -283.52    5246.46  -0.054   0.9571    \n   WITHIN_350M_BUS             554.27    2972.10   0.186   0.8528    \n   WITHIN_1KM_PRISCH        -15585.34    6547.15  -2.380   0.0211 *  \n\n   ---Significance stars\n   Signif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1 \n   Residual standard error: 57080 on 51 degrees of freedom\n   Multiple R-squared: 0.8651\n   Adjusted R-squared: 0.8281 \n   F-statistic: 23.36 on 14 and 51 DF,  p-value: < 2.2e-16 \n   ***Extra Diagnostic information\n   Residual sum of squares: 166166813007\n   Sigma(hat): 50954.45\n   AIC:  1647.976\n   AICc:  1659.078\n   BIC:  1684.045\n   ***********************************************************************\n   *          Results of Geographically Weighted Regression              *\n   ***********************************************************************\n\n   *********************Model calibration information*********************\n   Kernel function: gaussian \n   Adaptive bandwidth: 38 (number of nearest neighbours)\n   Regression points: the same locations as observations are used.\n   Distance metric: Euclidean distance metric is used.\n\n   ****************Summary of GWR coefficient estimates:******************\n                                 Min.   1st Qu.    Median   3rd Qu.      Max.\n   Intercept                 83347.44 105413.34 157379.87 230070.98 248431.98\n   floor_area_sqm             1717.78   1814.72   2491.26   2972.98   3147.61\n   storey_order              19904.33  21003.91  21743.85  22713.73  23096.88\n   remaining_lease_mths        227.03    257.24    276.46    290.18    310.56\n   PROX_CBD                 -15448.62 -14507.60 -13960.48 -13106.16 -11172.86\n   PROX_ELDERLYCARE         -11775.59 -11286.41 -11066.81 -10673.52 -10098.77\n   PROX_HAWKER               -2684.55   1456.83   5434.14  10626.34  14301.36\n   PROX_MRT                 -35115.13 -28706.12 -18373.89 -11081.03  -2978.09\n   PROX_PARK                -31018.83 -29587.26 -28417.12 -26769.53 -25517.51\n   PROX_MALL                -74252.70 -68360.70 -58292.87 -47930.67 -28727.47\n   PROX_SUPERMARKET         -63213.00 -46245.10 -39532.13 -36331.36 -31411.17\n   WITHIN_350M_KINDERGARTEN  12189.68  12724.14  14476.21  16454.37  17015.57\n   WITHIN_350M_CHILDCARE     -1900.40   -773.02   -512.73   -386.12   -230.38\n   WITHIN_350M_BUS            -249.25   -104.74    278.16    837.66   1027.19\n   WITHIN_1KM_PRISCH        -18775.17 -16025.45 -13818.44 -12142.05 -10969.29\n   ************************Diagnostic information*************************\n   Number of data points: 66 \n   Effective number of parameters (2trace(S) - trace(S'S)): 23.80071 \n   Effective degrees of freedom (n-2trace(S) + trace(S'S)): 42.19929 \n   AICc (GWR book, Fotheringham, et al. 2002, p. 61, eq 2.33): 1664.476 \n   AIC (GWR book, Fotheringham, et al. 2002,GWR p. 96, eq. 4.22): 1620.826 \n   BIC (GWR book, Fotheringham, et al. 2002,GWR p. 61, eq. 2.34): 1619.22 \n   Residual sum of squares: 131708750841 \n   R-square value:  0.8930716 \n   Adjusted R-square value:  0.8312994 \n\n   ***********************************************************************\n   Program stops at: 2024-11-09 23:08:12.377375 \n```\n\n\n:::\n:::\n\n\nPredicting with test data\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_bw_test_adaptive <- bw.gwr(resale_price ~ floor_area_sqm +\n                  storey_order + remaining_lease_mths +\n                  PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER +\n                  PROX_MRT + PROX_PARK + PROX_MALL + \n                  PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                  WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                  WITHIN_1KM_PRISCH,\n                  data=test_data,\n                  approach=\"CV\",\n                  kernel=\"gaussian\",\n                  adaptive=TRUE,\n                  longlat=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAdaptive bandwidth: 28 CV score: 4.1907e+11 \nAdaptive bandwidth: 25 CV score: 434399238557 \nAdaptive bandwidth: 30 CV score: 414201932872 \nAdaptive bandwidth: 31 CV score: 412819290895 \nAdaptive bandwidth: 32 CV score: 407106080520 \nAdaptive bandwidth: 32 CV score: 407106080520 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngwr_pred <- gwr.predict(formula = resale_price ~\n                          floor_area_sqm + storey_order +\n                          remaining_lease_mths + PROX_CBD + \n                          PROX_ELDERLYCARE + PROX_HAWKER + \n                          PROX_MRT + PROX_PARK + PROX_MALL + \n                          PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                          WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n                          WITHIN_1KM_PRISCH, \n                        data=train_data, \n                        predictdata = test_data, \n                        bw=bw_adaptive, \n                        kernel = 'gaussian', \n                        adaptive=TRUE, \n                        longlat = FALSE)\n```\n:::\n\n\n\n## Predictive Modelling: RF method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncoords <- st_coordinates(HDB_sample)\ncoords_train <- st_coordinates(train_data)\ncoords_test <- st_coordinates(test_data)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntrain_data_nogeom <- train_data %>%\n  st_drop_geometry()\n```\n:::\n\n\n\nCalibrating RF Model\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\nrf <- ranger(resale_price ~ floor_area_sqm + storey_order + \n               remaining_lease_mths + PROX_CBD + PROX_ELDERLYCARE + \n               PROX_HAWKER + PROX_MRT + PROX_PARK + PROX_MALL + \n               PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n               WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + \n               WITHIN_1KM_PRISCH,\n             data=train_data_nogeom)\nrf\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      66 \nNumber of independent variables:  14 \nMtry:                             3 \nTarget node size:                 5 \nVariable importance mode:         none \nSplitrule:                        variance \nOOB prediction error (MSE):       7987087492 \nR squared (OOB):                  0.5785168 \n```\n\n\n:::\n:::\n\n\n## Predictive Modelling: SpatialML method\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(1234)\ngwRF_adaptive <- grf(formula = resale_price ~ floor_area_sqm + \n                       storey_order + remaining_lease_mths + \n                       PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + \n                       PROX_MRT + PROX_PARK + PROX_MALL + \n                       PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +\n                       WITHIN_350M_CHILDCARE + WITHIN_350M_BUS +\n                       WITHIN_1KM_PRISCH,\n                     dframe=train_data_nogeom, \n                     bw=55,\n                     kernel=\"adaptive\",\n                     coords=coords_train)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRanger result\n\nCall:\n ranger(resale_price ~ floor_area_sqm + storey_order + remaining_lease_mths +      PROX_CBD + PROX_ELDERLYCARE + PROX_HAWKER + PROX_MRT + PROX_PARK +      PROX_MALL + PROX_SUPERMARKET + WITHIN_350M_KINDERGARTEN +      WITHIN_350M_CHILDCARE + WITHIN_350M_BUS + WITHIN_1KM_PRISCH,      data = train_data_nogeom, num.trees = 500, mtry = 4, importance = \"impurity\",      num.threads = NULL) \n\nType:                             Regression \nNumber of trees:                  500 \nSample size:                      66 \nNumber of independent variables:  14 \nMtry:                             4 \nTarget node size:                 5 \nVariable importance mode:         impurity \nSplitrule:                        variance \nOOB prediction error (MSE):       7557125410 \nR squared (OOB):                  0.6012061 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n          floor_area_sqm             storey_order     remaining_lease_mths \n             35144009705             249947153170             102651856222 \n                PROX_CBD         PROX_ELDERLYCARE              PROX_HAWKER \n            279091826634              55497520183              51035628035 \n                PROX_MRT                PROX_PARK                PROX_MALL \n             60823925563              39638246935              33223807925 \n        PROX_SUPERMARKET WITHIN_350M_KINDERGARTEN    WITHIN_350M_CHILDCARE \n             56706727384               9591392593              30439818770 \n         WITHIN_350M_BUS        WITHIN_1KM_PRISCH \n             21786914349              86767143784 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n-159359  -30513   -5272    9085   29352  314888 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n-20288.8  -5556.7   -770.0   -910.1   3052.1  31270.0 \n```\n\n\n:::\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                 Min          Max         Mean          StD\nfloor_area_sqm            5672849260  48399021500  18653355256  10388483957\nstorey_order             22242584370 634597387381 156939367968 179633625620\nremaining_lease_mths     39575489629 167944657594  66063990456  30022262965\nPROX_CBD                 26873951363 447280046119 122268028490 122268184262\nPROX_ELDERLYCARE          8038301815 193424840478  40143193770  46640413486\nPROX_HAWKER               3932697067 112525643717  27773559036  26338920196\nPROX_MRT                 25165475003 166418984045  49934892481  32102371670\nPROX_PARK                 7856397760  67875408519  24794602937  13016577316\nPROX_MALL                 6704166118  73803444636  21572960251  14872412165\nPROX_SUPERMARKET         16715666668 199215484885  54782711315  44381708005\nWITHIN_350M_KINDERGARTEN  5362997892  24686227363  11967622147   3904540670\nWITHIN_350M_CHILDCARE     3716344809 229185793731  32428530526  55166047530\nWITHIN_350M_BUS          12976751318  33864334994  18700422958   5016528058\nWITHIN_1KM_PRISCH         6425906031 163535603128  44147928146  44808679957\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_nogeom <- cbind(\n  test_data, coords_test) %>%\n  st_drop_geometry()\n```\n:::\n\n\n\n\nIn the code chunk below, predict.grf() of spatialML for predicting re-sale prices in the test data set (i.e. test_data_nogeom)\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ngwRF_pred <- predict.grf(gwRF_adaptive, \n                           test_data_nogeom, \n                           x.var.name=\"X\",\n                           y.var.name=\"Y\", \n                           local.w=1,\n                           global.w=0)\n```\n:::\n\n\n\nNext, the code chunk below is used to convert the output from predict.grf() into a data.frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nGRF_pred_df <- as.data.frame(gwRF_pred)\n```\n:::\n\n\n\nNext, the code chunk below is used to convert the output from predict.grf() into a data.frame.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntest_data_pred <- cbind(test_data, \n                        GRF_pred_df)\n```\n:::\n\n\n\n\n### Visualising the predicted values\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(data = test_data_pred,\n       aes(x = gwRF_pred,\n           y = resale_price)) +\n  geom_point()\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex08_files/figure-html/unnamed-chunk-23-1.png){width=672}\n:::\n:::",
    "supporting": [
      "In_Class_Ex08_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<script src=\"../../site_libs/kePrint-0.0.1/kePrint.js\"></script>\n<link href=\"../../site_libs/lightable-0.0.1/lightable.css\" rel=\"stylesheet\" />\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}