{
  "hash": "00caad2e2a10b171033f87e926f4c506",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"In Class Exercise 03\"\nauthor: \"Dew Stella Chan\"\ndate-modified: \"last-modified\"\nexecute: \n  execute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n::: {.cell}\n\n```{.r .cell-code}\npacman:: p_load(sf, spNetwork, tmap, tidyverse)\nset.seed(1234) #set seed to ensure the result is consistant\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnetwork<- st_read(dsn = \"data/rawdata\", layer =\"Punggol_St\") %>% st_transform( crs = 3414)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Punggol_St' from data source \n  `C:\\dewschan\\ISSS622-GAA\\In_class_Ex\\In_Class_Ex03\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 2642 features and 2 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 34038.56 ymin: 40941.11 xmax: 38882.85 ymax: 44801.27\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nchildcare <- st_read (dsn= \"data/rawdata\", layer=\"Punggol_CC\") %>%\n    st_transform( crs = 3414) %>% st_zm(childcare, drop = TRUE, what = \"ZM\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `Punggol_CC' from data source \n  `C:\\dewschan\\ISSS622-GAA\\In_class_Ex\\In_Class_Ex03\\data\\rawdata' \n  using driver `ESRI Shapefile'\nSimple feature collection with 61 features and 1 field\nGeometry type: POINT\nDimension:     XYZ\nBounding box:  xmin: 34423.98 ymin: 41503.6 xmax: 37619.47 ymax: 44685.77\nz_range:       zmin: 0 zmax: 0\nProjected CRS: SVY21 / Singapore TM\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(childcare) + \n  tm_dots(\"red\") + \n  tm_shape(network) +\n  tm_lines()\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex03_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntmap_mode('plot') #to keep it as plot to keep it light.\n```\n:::\n\n\nSplit the road into line segements.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlixels <- lixelize_lines(network, 700, \n                         mindist = 350)\n#reasonable walking distance in Singapore base on one of the research by NTU, set as half of this\n#min distance is the distance which is retained.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlixels <- lixelize_lines(network, 1000, \n                         mindist = 150)\n#changing parameters tp see the differences between the network and the lixels \n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples <- lines_center(lixels)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntmap_mode('plot')\ntm_shape(lixels) + \n  tm_lines() + \n  tm_shape(samples) +\n  tm_dots(size=0.001)\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex03_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntmap_mode('plot') #to keep it as plot to keep it light.\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#performing NkDE using the code\ndensities <- nkde(network, \n                  events = childcare,\n                  w = rep(1, nrow(childcare)),\n                  samples = samples,#as lixels and samples are not sorted\n                  kernel_name = \"quartic\",\n                  bw = 300, \n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(1,1), \n                  max_depth = 8,\n                  agg = 5, \n                  sparse = TRUE,\n                  verbose = FALSE)\n```\n:::\n\n\nAdded the density to the dataframe It can be appended back as the dataframes (samples and lixels are not sorted)\n\nIf we want to shade the points on the map, we will use samples. If we want to shade the lines then we will shade use lixels\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsamples$density <- densities\nlixels$density <- densities\n```\n:::\n\n\nSince the density is very small and it is in length and scale it up.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# re-scaling to help the mapping\nsamples$density <- samples$density*1000\nlixels$density <- lixels$density*1000\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# To prepare interactive and high cartographic quality map visualization\ntmap_mode('plot')\ntm_shape(lixels) +\n  tm_lines(col = \"density\") +\ntm_shape(childcare)+\n  tm_dots()\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex03_files/figure-html/unnamed-chunk-12-1.png){width=672}\n:::\n\n```{.r .cell-code}\ntmap_mode('plot')\n```\n:::\n\n\nAlthough the sytax indicates k functions, the algothrim is based on g functions.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#k function\nkfun_childcare <- kfunctions(network, \n                             childcare,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 49, # 50 simulation, start from 0.\n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\nkfun_childcare$plotk\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex03_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n\n```{.r .cell-code}\n#plot K, show signs of regularity at a nearer distances.  \nkfun_childcare$plotg#plot g\n```\n\n::: {.cell-output-display}\n![](In_Class_Ex03_files/figure-html/unnamed-chunk-13-2.png){width=672}\n:::\n:::\n",
    "supporting": [
      "In_Class_Ex03_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}