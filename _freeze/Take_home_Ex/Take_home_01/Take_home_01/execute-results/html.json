{
  "hash": "d50906be59acdd633f3a556b4b2484a5",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Exercise 01\"\nauthor: \"Dew Stella Chan\"\ndate: \"Septemeber 9, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n\n\n# Take Home Exercise 1\n\n## Loading of Libraries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sp, raster, spatstat, tmap, tidyverse, lubridate, readxl, spNetwork)\nset.seed(1234) #set seed to ensure the result is consistent\n```\n:::\n\n\n\n## Data preparation and Transformation\n\n### Loading of Thai Accident Data\n\nLoading of Thai accident data and transforming the incident datetime to date, day, hour.\n\nThe data transformation steps for incident time is done to categories when did the accident occurred. The dataframe is subsequently match with the Thai public holiday database to pick up holidays,and further process to differentiate between weekend or weekdays.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nrdacc_sf <- read_csv(\"data/thai_road_accident_2019_2022.csv\") %>%\n  filter(!is.na(longitude) & longitude != \"\", \n         !is.na(latitude) & latitude != \"\") %>%\n  st_as_sf(coords = c(\"longitude\", \"latitude\"), crs = 4326) %>%\n  st_transform(crs = 32647) %>%\n   # Ensure datetime is correctly parsed\n  mutate(incident_datetime = parse_date_time(incident_datetime, orders = \"d/m/Y H:M\")) %>%  \n  mutate(month_num = month(incident_datetime)) %>%\n  mutate(month_fac = month(incident_datetime, label = TRUE, abbr = TRUE)) %>%\n  mutate(day = day(incident_datetime)) %>%\n  mutate(dayofweek = wday(incident_datetime, label = TRUE, abbr = TRUE)) %>%\n  mutate(weekend = if_else(dayofweek %in% c(\"Sat\", \"Sun\"), \"weekend\", \"weekday\")) %>%\n  mutate(hour = hour(incident_datetime)) %>%\n  mutate(peak_hours = if_else(dayofweek %in% c(\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\") & \n                              ((hour >= 7 & hour < 9) | (hour >= 16 & hour < 19)), \n                              \"peak\", \"off-peak\"))%>%\n  mutate(incident_date = format(incident_datetime, \"%d/%m/%Y\"))\n```\n:::\n\n\n\n### Loading of Thai holiday data.\n\nThe code chunk below filters the public holiday containing on the national holidays.\n\nDepending on the requirements of the project, the file name \"Thai_PH\" contains different types of holidays types such as Observance, Season , Bank holiday and National Holidays which could be used for futher projects.\n\nFor this project, we will be using the National Holidays.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nThai_PH <- read_csv(\"data/ThaiPH_2019to2022_csv.csv\") %>%\n  mutate(Date = strftime(strptime(Date, format = \"%d/%m/%Y\"), format = \"%d/%m/%Y\")) %>%\n  filter(Type == \"National holiday\")\n```\n:::\n\n\n\n### Joining of Accident data with the national holidays data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf <- rdacc_sf %>%\n  left_join(Thai_PH, by = c(\"incident_date\" = \"Date\")) %>%\n  mutate(is_holiday = if_else(!is.na(Name), \"holiday\", \"non-holiday\")) \n```\n:::\n\n\n\n#### Writing the process data to rds folder and re-reading it.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(rdacc_sf,\"data/rds/rdacc_sf.rds\")#to save the file to rds\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrdacc_sf<-read_rds(\"data/rds/rdacc_sf.rds\") #re-reading the rdacc_sf file to the environments\n```\n:::\n\n\n\n### Preparing the data for Bangkok Metropolitan Region\n\nBased on the metadata, province of the Bangkok Metropolitan Region Codes are: ADM1_PCODE == \"TH10\", \"TH73\", \"TH12\", \"TH13\", \"TH11\", \"TH74\"\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nSAB = st_read(dsn = \"data\", layer = \"tha_admbnda_adm0_rtsd_20220121\") %>%\n  st_transform(crs = 32647)%>%  # Set CRS to WGS84\n  st_transform(crs = 32647)  # Transform to EPSG:32647\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm0_rtsd_20220121' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 1 feature and 13 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nSAB_1 = st_read(dsn = \"data\", layer = \"tha_admbnda_adm1_rtsd_20220121\")%>%\n  st_transform(crs = 32647) %>%\n  filter(ADM1_PCODE == \"TH10\" | ADM1_PCODE == \"TH73\"| ADM1_PCODE == \"TH12\" | ADM1_PCODE == \"TH13\"| ADM1_PCODE == \"TH11\"| ADM1_PCODE == \"TH74\") %>% # Set CRS to WGS84\n  st_transform(crs = 32647)  # Transform to EPSG:32647\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nSAB_2 = st_read(dsn = \"data\", layer = \"tha_admbnda_adm2_rtsd_20220121\")%>%\n  st_transform(crs = 32647)%>%\n  filter(ADM1_PCODE == \"TH10\" | ADM1_PCODE == \"TH73\"| ADM1_PCODE == \"TH12\" | ADM1_PCODE == \"TH13\"| ADM1_PCODE == \"TH11\"| ADM1_PCODE == \"TH74\") %>% # Set CRS to WGS84\n  st_transform(crs = 32647)  # Transform to EPSG:32647\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm2_rtsd_20220121' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 928 features and 19 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n\n```{.r .cell-code}\nSAB_3 = st_read(dsn = \"data\", layer = \"tha_admbnda_adm3_rtsd_20220121\")%>%\n  st_transform(crs = 32647)%>%\n  filter(ADM1_PCODE == \"TH10\" | ADM1_PCODE == \"TH73\"| ADM1_PCODE == \"TH12\" | ADM1_PCODE == \"TH13\"| ADM1_PCODE == \"TH11\"| ADM1_PCODE == \"TH74\") %>% # Set CRS to WGS84\n  st_transform(crs = 32647)  # Transform to EPSG:32647\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm3_rtsd_20220121' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 7425 features and 22 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n### writing and reading the data in rds folder\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(SAB,\"data/rds/SAB.rds\")\nwrite_rds(SAB_1,\"data/rds/SAB_1.rds\")\nwrite_rds(SAB_2,\"data/rds/SAB_2.rds\")\nwrite_rds(SAB_3,\"data/rds/SAB_3.rds\")#to save the file to rds\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB<-read_rds(\"data/rds/SAB.rds\")#re-reading the acc file to the environments\nSAB_1<-read_rds(\"data/rds/SAB_1.rds\")\nSAB_2<-read_rds(\"data/rds/SAB_2.rds\")\nSAB_3<-read_rds(\"data/rds/SAB_3.rds\")\n```\n:::\n\n\n\n#### To check on the st geometry data is able to be plotted properly.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(SAB))#Outline of Thailand \n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-10-1.png){width=672}\n:::\n:::\n\n\n\n### Loading Thailand Road data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nRd = st_read(dsn = \"data\", layer = \"hotosm_tha_roads_lines_shp\")%>% \n  st_set_crs(4326)%>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `hotosm_tha_roads_lines_shp' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_01\\data' using driver `ESRI Shapefile'\nSimple feature collection with 2792590 features and 14 fields\nGeometry type: MULTILINESTRING\nDimension:     XY\nBounding box:  xmin: 97.34457 ymin: 5.643645 xmax: 105.6528 ymax: 20.47168\nCRS:           NA\n```\n\n\n:::\n:::\n\n\n\nInspecting data structure.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(Rd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 2,792,590\nColumns: 15\n$ name       <chr> \"ถนนฉลองกรุง\", \"ซอยฉลองกรุง 1/1\", NA, NA, \"ถนนฉลองกรุง\", NA, \"…\n$ name_en    <chr> \"Chalong Krung Road\", \"Soi Chalong Krung 1/1\", NA, NA, \"Cha…\n$ highway    <chr> \"secondary\", \"residential\", \"secondary_link\", \"service\", \"s…\n$ surface    <chr> \"paved\", NA, NA, NA, \"concrete\", NA, NA, \"unpaved\", NA, NA,…\n$ smoothness <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ width      <chr> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA,…\n$ lanes      <chr> NA, NA, NA, NA, \"2\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ oneway     <chr> \"yes\", NA, \"yes\", NA, \"yes\", NA, NA, NA, NA, NA, NA, NA, NA…\n$ bridge     <chr> NA, NA, NA, NA, \"yes\", NA, NA, NA, NA, NA, NA, NA, NA, NA, …\n$ layer      <chr> NA, NA, NA, NA, \"1\", NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ source     <chr> NA, NA, NA, NA, \"Bing\", NA, NA, \"GPS\", NA, NA, NA, NA, NA, …\n$ name_th    <chr> \"ถนนฉลองกรุง\", \"ซอยฉลองกรุง 1/1\", NA, NA, \"ถนนฉลองกรุง\", NA, \"…\n$ osm_id     <dbl> 1125681229, 594401607, 472283206, 594401608, 116847248, 317…\n$ osm_type   <chr> \"ways_line\", \"ways_line\", \"ways_line\", \"ways_line\", \"ways_l…\n$ geometry   <MULTILINESTRING [m]> MULTILINESTRING ((693686.1 ..., MULTILINEST…\n```\n\n\n:::\n\n```{.r .cell-code}\nst_crs(Rd)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCoordinate Reference System:\n  User input: EPSG:32647 \n  wkt:\nPROJCRS[\"WGS 84 / UTM zone 47N\",\n    BASEGEOGCRS[\"WGS 84\",\n        ENSEMBLE[\"World Geodetic System 1984 ensemble\",\n            MEMBER[\"World Geodetic System 1984 (Transit)\"],\n            MEMBER[\"World Geodetic System 1984 (G730)\"],\n            MEMBER[\"World Geodetic System 1984 (G873)\"],\n            MEMBER[\"World Geodetic System 1984 (G1150)\"],\n            MEMBER[\"World Geodetic System 1984 (G1674)\"],\n            MEMBER[\"World Geodetic System 1984 (G1762)\"],\n            MEMBER[\"World Geodetic System 1984 (G2139)\"],\n            ELLIPSOID[\"WGS 84\",6378137,298.257223563,\n                LENGTHUNIT[\"metre\",1]],\n            ENSEMBLEACCURACY[2.0]],\n        PRIMEM[\"Greenwich\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433]],\n        ID[\"EPSG\",4326]],\n    CONVERSION[\"UTM zone 47N\",\n        METHOD[\"Transverse Mercator\",\n            ID[\"EPSG\",9807]],\n        PARAMETER[\"Latitude of natural origin\",0,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8801]],\n        PARAMETER[\"Longitude of natural origin\",99,\n            ANGLEUNIT[\"degree\",0.0174532925199433],\n            ID[\"EPSG\",8802]],\n        PARAMETER[\"Scale factor at natural origin\",0.9996,\n            SCALEUNIT[\"unity\",1],\n            ID[\"EPSG\",8805]],\n        PARAMETER[\"False easting\",500000,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8806]],\n        PARAMETER[\"False northing\",0,\n            LENGTHUNIT[\"metre\",1],\n            ID[\"EPSG\",8807]]],\n    CS[Cartesian,2],\n        AXIS[\"(E)\",east,\n            ORDER[1],\n            LENGTHUNIT[\"metre\",1]],\n        AXIS[\"(N)\",north,\n            ORDER[2],\n            LENGTHUNIT[\"metre\",1]],\n    USAGE[\n        SCOPE[\"Navigation and medium accuracy spatial referencing.\"],\n        AREA[\"Between 96°E and 102°E, northern hemisphere between equator and 84°N, onshore and offshore. China. Indonesia. Laos. Malaysia - West Malaysia. Mongolia. Myanmar (Burma). Russian Federation. Thailand.\"],\n        BBOX[0,96,84,102]],\n    ID[\"EPSG\",32647]]\n```\n\n\n:::\n:::\n\n\n\n### Filtering to the required highwayys\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nRd <- Rd %>%\n  filter(highway %in% c(\"motorway\", \"trunk\", \"primary\", \"secondary\", \"tertiary\", \"unclassified\"))\n```\n:::\n\n\n\n#### Saving the road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Rd,\"data/rds/Rd.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nRd<-read_rds(\"data/rds/Rd.rds\")\n```\n:::\n\n\n\n#### Merging polygon of the 5 provinces in Bangkok Metropoiltan Area into 1 overall boundary\n\nThis will be the main boundary which will be used to sieve out the road network and road accidents which have occured in Bangkok Metropolitan Area.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB_1_M<- SAB_1 %>%\n st_union()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#plot(st_geometry(rdacc_sf)), Need to intersect\nplot(st_geometry(SAB))#Outline of Thailand \n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-17-1.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(st_geometry(SAB_1_M))#Outline of Bangkok MR \n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-17-2.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(st_geometry(SAB_2)) \n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-17-3.png){width=672}\n:::\n\n```{.r .cell-code}\nplot(st_geometry(SAB_3))\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-17-4.png){width=672}\n:::\n\n```{.r .cell-code}\n#plot(st_geometry(Rd))# need to intersect then plot \n```\n:::\n\n\n\n### Intersect Thailand Road and to sieve out the Road at Bangkok Metropolitan area.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd<-st_intersection (Rd, SAB_1)\n```\n:::\n\n\n\n#### Saving the Bankok road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Bkk_Rd,\"data/rds/Bkk_Rd.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the Bangkok road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd<-read_rds(\"data/rds/Bkk_Rd.rds\")\n```\n:::\n\n\n\n### Merging multilinestring to single line.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_rds_Ln <- Bkk_Rd[(st_geometry_type(Bkk_Rd)== \"LINESTRING\"),]\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_rds_Ln \n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 26689 features and 30 fields\nGeometry type: LINESTRING\nDimension:     XY\nBounding box:  xmin: 590159.4 ymin: 1484506 xmax: 712235 ymax: 1579041\nProjected CRS: WGS 84 / UTM zone 47N\nFirst 10 features:\n                name                name_en   highway  surface smoothness width\n1         ถนนฉลองกรุง     Chalong Krung Road secondary    paved       <NA>  <NA>\n2         ถนนฉลองกรุง     Chalong Krung Road secondary concrete       <NA>  <NA>\n168 ถนนประชาสงเคราะห์   Pracha Songkhro Road  tertiary  asphalt       <NA>  <NA>\n180     ถนนวิภาวดีรังสิต Vibhavadi Rangsit Road secondary     <NA>       <NA>  <NA>\n182         ถนนดินแดง         Din Daeng Road   primary     <NA>       <NA>  <NA>\n183     ถนนวิภาวดีรังสิต Vibhavadi Rangsit Road secondary     <NA>       <NA>  <NA>\n184         ถนนดินแดง         Din Daeng Road   primary     <NA>       <NA>  <NA>\n274     ถนนจรัญสนิทวงศ์ Charan Sanit Wong Road secondary     <NA>       <NA>  <NA>\n331        ถนนลำลูกกา        Lam Luk Ka Road secondary     <NA>       <NA>  <NA>\n351      ถนนราชปรารภ      Ratchaprarop Road secondary  asphalt       <NA>  <NA>\n    lanes oneway bridge layer source          name_th     osm_id  osm_type\n1    <NA>    yes   <NA>  <NA>   <NA>       ถนนฉลองกรุง 1125681229 ways_line\n2       2    yes    yes     1   Bing       ถนนฉลองกรุง  116847248 ways_line\n168  <NA>   <NA>   <NA>  <NA>   <NA> ถนนประชาสงเคราะห์   25933535 ways_line\n180  <NA>    yes   <NA>  <NA>   <NA>     ถนนวิภาวดีรังสิต  835519345 ways_line\n182  <NA>    yes   <NA>  <NA>   <NA>         ถนนดินแดง 1055365750 ways_line\n183  <NA>    yes   <NA>  <NA>   <NA>     ถนนวิภาวดีรังสิต 1306889182 ways_line\n184  <NA>    yes   <NA>  <NA>   <NA>         ถนนดินแดง 1306889184 ways_line\n274  <NA>    yes   <NA>  <NA>   <NA>     ถนนจรัญสนิทวงศ์  140476647 ways_line\n331     3    yes   <NA>  <NA>   <NA>        ถนนลำลูกกา 1312137725 ways_line\n351     6   <NA>   <NA>  <NA>   <NA>      ถนนราชปรารภ  784943756 ways_line\n    Shape_Leng Shape_Area ADM1_EN      ADM1_TH ADM1_PCODE ADM1_REF ADM1ALT1EN\n1     2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n2     2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n168   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n180   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n182   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n183   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n184   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n274   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n331   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n351   2.417227  0.1313387 Bangkok กรุงเทพมหานคร       TH10     <NA>       <NA>\n    ADM1ALT2EN ADM1ALT1TH ADM1ALT2TH  ADM0_EN   ADM0_TH ADM0_PCODE       date\n1         <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n2         <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n168       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n180       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n182       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n183       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n184       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n274       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n331       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n351       <NA>       <NA>       <NA> Thailand ประเทศไทย         TH 2019-02-18\n       validOn    validTo                       geometry\n1   2022-01-22 -001-11-30 LINESTRING (693686.1 151979...\n2   2022-01-22 -001-11-30 LINESTRING (692810.8 151863...\n168 2022-01-22 -001-11-30 LINESTRING (668360.2 152245...\n180 2022-01-22 -001-11-30 LINESTRING (667716.6 152278...\n182 2022-01-22 -001-11-30 LINESTRING (667485.1 152210...\n183 2022-01-22 -001-11-30 LINESTRING (667822.4 152298...\n184 2022-01-22 -001-11-30 LINESTRING (667418.7 152214...\n274 2022-01-22 -001-11-30 LINESTRING (663326.8 152716...\n331 2022-01-22 -001-11-30 LINESTRING (675289.2 154281...\n351 2022-01-22 -001-11-30 LINESTRING (666704.9 152103...\n```\n\n\n:::\n:::\n\n\n\n#### Saving the Bankok road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Bkk_Rd,\"data/rds/Bkk_Rd.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the Bangkok road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd<-read_rds(\"data/rds/Bkk_Rd.rds\")\n```\n:::\n\n\n\n#### Saving the Linestring Bankok road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Bkk_rds_Ln ,\"data/rds/Bkk_rds_Ln.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the Linestring Bangkok road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_rds_Ln<-read_rds(\"data/rds/Bkk_rds_Ln.rds\")\n```\n:::\n\n\n\n### ploting Merged bankok Layer to ensure that the geometry is working.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(Bkk_rds_Ln))\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-27-1.png){width=672}\n:::\n:::\n\n\n\n### Intersect Road Accidents which happeneded at Bangkok Metropoliton Area.\n\nIn the code chunk below, we intersect the the accidents with Bangkok Metropoliton Area, then the output is convert back to the Sf object so that the accident data could be joined with the necessary information which allow us to carry out explotary data analysis in the subsequent sections.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd_Acc <-st_intersection (SAB_1_M, rdacc_sf)\nBkk_Rd_Acc <- st_as_sf(Bkk_Rd_Acc)\nBkk_Rd_Acc<- st_join(Bkk_Rd_Acc, rdacc_sf)\n```\n:::\n\n\n\n### Plot Road Accidents at Bangkok Metropoliton Area to visualise that the correct accidents are picked up\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot(st_geometry(Bkk_Rd_Acc))\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-29-1.png){width=672}\n:::\n:::\n\n\n\n#### Saving the Linestring Bankok road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Bkk_Rd_Acc,\"data/rds/Bkk_Rd_Acc.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the Linestring Bangkok road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd_Acc<-read_rds(\"data/rds/Bkk_Rd_Acc.rds\")\n```\n:::\n\n\n\n### Adding buffer to Bangkok Road.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd_m_50 <- st_buffer(Bkk_rds_Ln, dist = 50) # buffer distance in buffer \n# Check the result\nplot(st_geometry(Bkk_Rd_m_50))\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-32-1.png){width=672}\n:::\n:::\n\n\n\n#### Saving the Linestring Bankok road data to the rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Bkk_Rd_m_50,\"data/rds/Bkk_Rd_m_50.rds\")\n#to save the file to rds\n```\n:::\n\n\n\n#### Reading the Linestring Bangkok road data from rds folder.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nBkk_Rd_m_50<-read_rds(\"data/rds/Bkk_Rd_m_50.rds\")\n```\n:::\n\n\n\n### Network KDE (NKDE) Analysis:\n\nhttps://cran.r-project.org/web/packages/spNetwork/vignettes/NKDE.html\n\nReferring to the example stated in the documentation, the bike accidents are plotted at radius of 300. and lixlize is set at 200m. Given the large large area of the area, Lixel should be size to up increase to 100 km\n\n\n# Apply the lixelize_lines function\nlixels <- lixelize_lines(Bkk_rds_Ln, 100000, mindist = 37500)\n\n\n\nsamples <- lines_center(lixels)\n\n\ndensities <- nkde(Bkk_rds_Ln, \n                  events = Bkk_Rd_Acc,\n                  w = rep(1, nrow(Bkk_Rd_Acc)),\n                  samples = samples,\n                  kernel_name = \"quartic\",\n                  bw = 100000, #change the bandwidth to 2km\n                  div= \"bw\", \n                  method = \"simple\", \n                  digits = 1, \n                  tol = 1,\n                  grid_shape = c(100,100), \n                  max_depth = 2,# reducing the depth to aid in the calculation\n                  agg = 100000, #we aggregate events within a 1km radius (faster calculation)\n                  sparse = TRUE,\n                  verbose = FALSE)\n\n\n\nsamples$density <- densities\nlixels$density <- densities\n\n\n\n# re-scaling to help the mapping\nsamples$density <- samples$density*1000\nlixels$density <- lixels$density*1000\n\n\n\n# To prepare interactive and high cartographic quality map visualization\ntmap_mode('plot')\ntm_shape(lixels) +\n  tm_lines(col = \"density\") +\ntm_shape(Bkk_Rd_Acc)+\n  tm_dots()\n\n\n\n#k function\nkfun_Bkk_Acc_Ln <- kfunctions(Bkk_rds_Ln, \n                             Bkk_Rd_Acc,\n                             start = 0, \n                             end = 1000, \n                             step = 50, \n                             width = 50, \n                             nsim = 20, # 50 simulation, start from 0.\n                             resolution = 50,\n                             verbose = FALSE, \n                             conf_int = 0.05)\n\nkfun_Bkk_Acc_Lne$plotk\n\n\n## Exploratory Data Analysis\n\nThe following sections exploratory data analysis. Histograms were plotted to view if there are any observations observed for the accidents which occurred within Bangkok Metropolitan Area.\n\n### 1. Accidents occured during peak and non-peak hours, holidays and non holidays.\n\nBased on the following data generated, majority of the accidents have occurred outside the peak hours. Peak hours in Bangkok Metropolitan Area is defined as 7 – 9 AM and 4 – 7 PM on weekdays for this project.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Bkk_Rd_Acc, aes(x = peak_hours)) +\n  geom_histogram(stat = \"count\", fill = \"steelblue\", color = \"black\", bins = 2) +\n  labs(title = \"Count of Accidents During Peak and Non-Peak Hours\",\n       x = \"Acc Code\",\n       y = \"Count of Accidents\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-35-1.png){width=672}\n:::\n:::\n\n\n\nThe following code shows the number of accidents which took place during the holidays vs non holidays.\n\nAlthough that based on the histogram majority of the accidents occurred during non- holidays. This should not be considered as the number of days which was public holiday is much lower than non holiday. Hence it will be more accurate to normalise by the number of days to provide a more accurate picture.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Bkk_Rd_Acc, aes(x = is_holiday)) +\n  geom_histogram(stat = \"count\", fill = \"steelblue\", color = \"black\", bins = 2) +\n  labs(title = \"Count of Accidents During Holidays and non-Holidays\",\n       x = \"Acc Code\",\n       y = \"Count of Accidents\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-36-1.png){width=672}\n:::\n:::\n\n\n\nThe next code chunk is to plot the accidents which had occurred through the days in the week.\n\nBased on the chart, it is observed that it has occurred more commonly on Friday, Saturday and Sunday in the Bangkok Metropolitan Area.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Bkk_Rd_Acc, aes(x = dayofweek)) +\n  geom_histogram(stat = \"count\", fill = \"steelblue\", color = \"black\", bins = 2) +\n  labs(title = \"Count of Accidents by days of the week\",\n       x = \"Acc Code\",\n       y = \"Count of Accidents\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-37-1.png){width=672}\n:::\n:::\n\n\n\nThe following code chunk is to plot the type of vehicles which were common to involve accidents.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Bkk_Rd_Acc, aes(x = vehicle_type)) +\n  geom_histogram(stat = \"count\", fill = \"steelblue\", color = \"black\", bins = 2) +\n  labs(title = \"Count of Accidents by vehicle types\",\n       x = \"Acc Code\",\n       y = \"Count of Accidents\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-38-1.png){width=672}\n:::\n:::\n\n\n\nThe following code view the accidents which had occurred in different weather conditions.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(Bkk_Rd_Acc, aes(x = weather_condition)) +\n  geom_histogram(stat = \"count\", fill = \"steelblue\", color = \"black\", bins = 2) +\n  labs(title = \"Count of Accidents by weather conditions\",\n       x = \"Acc Code\",\n       y = \"Count of Accidents\") +\n  theme_minimal()\n```\n\n::: {.cell-output-display}\n![](Take_home_01_files/figure-html/unnamed-chunk-39-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take_home_01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}