{
  "hash": "00b373e02865b88e96e5b48e4c991571",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-Home Exercise 2\"\nauthor: \"Dew Stella Chan\"\nformat: html\neditor: visual\ndate: \"Septemeber 27, 2024\"\ndate-modified: \"last-modified\"\nexecute: \n  eval: true\n  echo: true\n  message: false\n  freeze: true\n  warning: false\n---\n\n\n\n# Take Home Exercise 02\n\n\n\n## Loading of Libraries.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(sf, sp, sfdep, raster, spatstat, tmap, tidyverse, lubridate, readxl, spNetwork, plotly, tidyverse, Kendall,  knitr, spdep, patchwork)\nset.seed(1234) #set seed to ensure the result is consistent\n```\n:::\n\n\n\n## Data preparation and Transformation\n\n### Loading of Thailand - Subnational Administrative Boundaries\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#|eval: false\nSAB_1 = st_read(dsn = \"data\", layer = \"tha_admbnda_adm1_rtsd_20220121\")%>%\n  st_transform(crs = 32647)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nReading layer `tha_admbnda_adm1_rtsd_20220121' from data source \n  `C:\\dewschan\\ISSS622-GAA\\Take_home_Ex\\Take_home_02\\data' using driver `ESRI Shapefile'\nSimple feature collection with 77 features and 16 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 97.34336 ymin: 5.613038 xmax: 105.637 ymax: 20.46507\nGeodetic CRS:  WGS 84\n```\n\n\n:::\n:::\n\n\n\n### writing and reading the data to rds folder\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(SAB_1,\"data/rds/SAB_1.rds\")\n#to save the file to rds\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n#re-reading the acc file to the environments\nSAB_1<-read_rds(\"data/rds/SAB_1.rds\")\n```\n:::\n\n\n\nGiven that Phunket is a offshore island from the Thailand Mainland, the focus of this analysis will be on using on distance based matrix \n\n\n## Thailand Domestic Tourism Statistics\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTour_data <- read_csv(\"data/thailand_domestic_tourism_2019_2023_ver2.csv\")\n```\n:::\n\n\n\nStandardizing the Province Names\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTour_data <- Tour_data %>%\n  mutate(province_eng = case_when(\n    province_eng == \"Buriram\" ~ \"Buri Ram\",\n    province_eng == \"Chainat\" ~ \"Chai Nat\",\n    province_eng == \"Chonburi\" ~ \"Chon Buri\",\n    province_eng == \"Lopburi\" ~ \"Lop Buri\",\n    province_eng == \"Nong Bua Lamphu\" ~ \"Nong Bua Lam Phu\",\n    province_eng == \"Phang Nga\" ~ \"Phangnga\",\n    province_eng == \"Prachinburi\" ~ \"Prachin Buri\",\n    province_eng == \"Sisaket\" ~ \"Si Sa Ket\",\n    TRUE ~ province_eng\n  ))\n\nTour_data <-rename(Tour_data, ADM1_EN = province_eng, Date_tour = date )\n```\n:::\n\n\n\n#### writing and reading the data in Tourism Statistics to rds folder\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Tour_data,\"data/rds/Tour_data.rds\")\n#to save the file to rds\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTour_data<-read_rds(\"data/rds/Tour_data.rds\")\n#re-reading the acc file to the environments\n```\n:::\n\n\n\n\n### Data Transformation\n\nTransform tour data from long table into a table with the 8 different indicators in the variables column into individual column for data analysis.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntour_data_wide <- pivot_wider(Tour_data, names_from = \"variable\", values_from = \"value\")\nwrite_rds(tour_data_wide,\"data/rds/tour_data_wide.rds\")\n```\n:::\n\n\n\n##### reading the wide data in Tourism Statistics from rds folder:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#re-reading the acc file to the environments\ntour_data_wide<-read_rds(\"data/rds/tour_data_wide.rds\")\n```\n:::\n\n\n\n### Joining the aspatial long data to geospatial data:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB1_tour_wide <- left_join(SAB_1, tour_data_wide)\nwrite_rds(SAB1_tour_wide,\"data/rds/SAB1_tour_wide.rds\")\n```\n:::\n\n\n\n#### Reading the joined aspatial and geospatial data from rds folder:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB1_tour_wide<-read_rds(\"data/rds/SAB1_tour_wide.rds\")\n```\n:::\n\n\n\n## To Derive Foreign related spending for for the study period.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ntotal_for_prov<- tour_data_wide %>%\n  group_by(ADM1_EN) %>%\n  summarize(total_for_revenue = sum(revenue_foreign), total_no_for_tourist= sum(no_tourist_foreign))%>%\n  mutate(Amt_rev_per_for_tourist= (total_for_revenue /total_no_for_tourist))\n\nwrite_rds(total_for_prov,\"data/rds/total_for_prov.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB_1_total_for_prov<- left_join(SAB_1, total_for_prov)\nwrite_rds(SAB_1_total_for_prov,\"data/rds/SAB_1_total_for_prov.rds\")\n```\n:::\n\n\n\n#### To read the data from SAB_1 layer rds folder. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nSAB_1_total_for_prov<-read_rds(\"data/rds/SAB_1_total_for_prov.rds\")\n```\n:::\n\n\n\n\n#### To read the data from Thai_total_for_prov layer rds folder.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov <- subset(SAB_1_total_for_prov , \n                              select = c(\"Shape_Leng\", \"Shape_Area\", \n                                        \"ADM1_EN\",\"date\", \"total_for_revenue\", \n                                        \"total_no_for_tourist\",\n                                        \"Amt_rev_per_for_tourist\", \"geometry\"))\nwrite_rds(Thai_total_for_prov,\"data/rds/Thai_total_for_prov.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov<-read_rds(\"data/rds/Thai_total_for_prov.rds\")\n```\n:::\n\n\n\n\n## Visualising year 2019 to 2023 by Variables\n\nTotal Revenue from foreign\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the map\ntmap_mode(\"plot\")\nequal_TotRev <- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"total_for_revenue\",\n           style = \"quantile\",\n           palette = \"Blues\",\n           title = \"Total Revenue \") +\n  tm_layout(main.title = \"Equal quantile Distribution of Total Foreign Revenue by Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\nquantile_TotRev<- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"total_for_revenue\",\n           style = \"equal\",\n           palette = \"Blues\",\n           title = \"Total Revenue\") +\n  tm_layout(main.title = \"Equal Interval of Total Foreign Revenue by Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\ntmap_arrange(equal_TotRev, \n             quantile_TotRev, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-18-1.png){width=672}\n:::\n:::\n\n\n\nAmount of Foregin Tourist Spending. \n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the map\ntmap_mode(\"plot\")\nequal_nofor <- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"total_no_for_tourist\",\n           style = \"quantile\",\n           palette = \"Blues\",\n           title = \"Total no. of Foreign Tourist\") +\n  tm_layout(main.title = \"Equal quantile Distribution of Total no. of Foreign Tourist by Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\nquantil_nofor<- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"total_no_for_tourist\",\n           style = \"equal\",\n           palette = \"Blues\",\n           title = \"Total no. of Foreign Tourist\") +\n  tm_layout(main.title = \"Equal Interval of Total no. of Foreign Tourist by Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\ntmap_arrange(equal_nofor, \n             quantil_nofor, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-19-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create the map\ntmap_mode(\"plot\")\nequal_Amt <- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"Amt_rev_per_for_tourist\",\n           style = \"quantile\",\n           palette = \"Blues\",\n           title = \"Amount of reveune per foreign Touristt\") +\n  tm_layout(main.title = \"Equal quantile Distribution of Amount of reveune per foreign Touristby Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\nquantil_Amt<- tm_shape(Thai_total_for_prov) +\n  tm_fill(\"Amt_rev_per_for_tourist\",\n           style = \"equal\",\n           palette = \"Blues\",\n           title = \"Amount of reveune per foreign Tourist\") +\n  tm_layout(main.title = \"Equal Interval of Amount of reveune per foreign Tourist by Provinces 2019 to 2023\",\n            main.title.position = \"center\",\n            main.title.size = 0.6,\n            legend.height = 0.45,\n            legend.width = 0.35,\n            frame = TRUE) +\n  tm_borders(alpha = 0.5) +\n  tm_compass(type=\"8star\", size = 2) +\n  tm_scale_bar()\n\n\ntmap_arrange(equal_Amt, \n             quantil_Amt, \n             asp=1, \n             ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-20-1.png){width=672}\n:::\n:::\n\n\n\n\n\n\n\n# Analyising if Tourist hotspot is related to space \n\nTo start of our analysis we will start by analysing if the tourist hotspot is related spatially. \n\ngiven that phunket is a offshore island and has the one of the top 3 provicnes, hence contigunity matrix will not be suitable, we will need to use distance based matrix.  \n\n\n::: {.cell}\n\n```{.r .cell-code}\ntop_3_revenue <- Thai_total_for_prov %>%\n  arrange(desc(total_for_revenue)) %>%\n  head(3)\n\ntop_3_tourists <- Thai_total_for_prov %>%\n  arrange(desc(total_no_for_tourist)) %>%\n  head(3)\n\ntop_3_revenue_per_tourist <- Thai_total_for_prov %>%\n  arrange(desc(Amt_rev_per_for_tourist)) %>%\n  head(3)\n\nprint(top_3_revenue)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 3 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 418207.3 ymin: 826705.1 xmax: 794817.5 ymax: 1543363\nProjected CRS: WGS 84 / UTM zone 47N\n  Shape_Leng Shape_Area   ADM1_EN       date total_for_revenue\n1   2.417227 0.13133873   Bangkok 2019-02-18      1.106223e+12\n2   2.920196 0.04494432    Phuket 2019-02-18      7.315906e+11\n3   6.091786 0.37563008 Chon Buri 2019-02-18      2.999981e+11\n  total_no_for_tourist Amt_rev_per_for_tourist                       geometry\n1             44452634                24885.43 MULTIPOLYGON (((674339.8 15...\n2             17525594                41744.13 MULTIPOLYGON (((424349 8267...\n3             14660424                20463.13 MULTIPOLYGON (((714273.8 13...\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_3_tourists)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 3 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 418207.3 ymin: 826705.1 xmax: 794817.5 ymax: 1543363\nProjected CRS: WGS 84 / UTM zone 47N\n  Shape_Leng Shape_Area   ADM1_EN       date total_for_revenue\n1   2.417227 0.13133873   Bangkok 2019-02-18      1.106223e+12\n2   2.920196 0.04494432    Phuket 2019-02-18      7.315906e+11\n3   6.091786 0.37563008 Chon Buri 2019-02-18      2.999981e+11\n  total_no_for_tourist Amt_rev_per_for_tourist                       geometry\n1             44452634                24885.43 MULTIPOLYGON (((674339.8 15...\n2             17525594                41744.13 MULTIPOLYGON (((424349 8267...\n3             14660424                20463.13 MULTIPOLYGON (((714273.8 13...\n```\n\n\n:::\n\n```{.r .cell-code}\nprint(top_3_revenue_per_tourist)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 3 features and 7 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 418207.3 ymin: 826705.1 xmax: 794817.5 ymax: 1543363\nProjected CRS: WGS 84 / UTM zone 47N\n  Shape_Leng Shape_Area   ADM1_EN       date total_for_revenue\n1   2.920196 0.04494432    Phuket 2019-02-18      7.315906e+11\n2   2.417227 0.13133873   Bangkok 2019-02-18      1.106223e+12\n3   6.091786 0.37563008 Chon Buri 2019-02-18      2.999981e+11\n  total_no_for_tourist Amt_rev_per_for_tourist                       geometry\n1             17525594                41744.13 MULTIPOLYGON (((424349 8267...\n2             44452634                24885.43 MULTIPOLYGON (((674339.8 15...\n3             14660424                20463.13 MULTIPOLYGON (((714273.8 13...\n```\n\n\n:::\n:::\n\n\n\n\n\n\n## Calculating using the distance based matrix:\n\n### Fixed Distance Matrix: \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Assuming Thai_total_for_pro has a geometry column in a projected CRS\nThai_total_for_prov <- st_transform(Thai_total_for_prov, crs = 4326) # WGS84 CRS\n\nlongitude <- map_dbl(Thai_total_for_prov$geometry, ~st_centroid(.x)[[1]])\nlatitude <- map_dbl(Thai_total_for_prov$geometry, ~st_centroid(.x)[[2]])\ncoords <- cbind(longitude, latitude)\nhead(coords)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n     longitude latitude\n[1,]  100.6235 13.77183\n[2,]  100.7102 13.59651\n[3,]  100.3928 13.92416\n[4,]  100.6824 14.06513\n[5,]  100.5266 14.34535\n[6,]  100.3485 14.62354\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nk1 <- knn2nb(knearneigh(coords))\nk1dists <- unlist(nbdists(k1, coords, longlat = TRUE))\nsummary(k1dists)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n  21.55   51.92   64.33   63.24   76.77  110.94 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov$ADM1_EN[match(max(k1dists), k1dists)]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"Prachuap Khiri Khan\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwm_d111 <- dnearneigh(coords, 0, 111, longlat = TRUE) #based on the max distance from the fix distance neigh\nwm_d111\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 350 \nPercentage nonzero weights: 5.903188 \nAverage number of links: 4.545455 \n2 disjoint connected subgraphs\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(wm_d111)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 77\n $ : int [1:12] 2 3 4 5 6 10 11 15 17 59 ...\n $ : int [1:10] 1 3 4 5 11 15 17 59 60 61\n $ : int [1:13] 1 2 4 5 6 8 10 17 56 58 ...\n $ : int [1:14] 1 2 3 5 6 8 10 15 16 17 ...\n $ : int [1:13] 1 2 3 4 6 7 8 9 10 17 ...\n $ : int [1:11] 1 3 4 5 7 8 9 10 17 58 ...\n $ : int [1:7] 5 6 8 9 10 17 48\n $ : int [1:10] 3 4 5 6 7 9 10 48 49 58\n $ : int [1:7] 5 6 7 8 48 49 58\n $ : int [1:9] 1 3 4 5 6 7 8 16 17\n $ : int [1:6] 1 2 12 13 15 16\n $ : int [1:3] 11 13 15\n $ : int [1:5] 11 12 14 15 18\n $ : int 13\n $ : int [1:9] 1 2 4 11 12 13 16 17 18\n $ : int [1:6] 4 10 11 15 17 18\n $ : int [1:10] 1 2 3 4 5 6 7 10 15 16\n $ : int [1:3] 13 15 16\n $ : int 20\n $ : int [1:2] 19 21\n $ : int [1:2] 20 22\n $ : int [1:2] 21 23\n $ : int [1:2] 22 26\n $ : int [1:3] 26 34 38\n $ : int [1:2] 29 55\n $ : int [1:4] 23 24 34 38\n $ : int [1:2] 32 36\n $ : int [1:4] 29 30 31 32\n $ : int [1:3] 25 28 33\n $ : int [1:3] 28 32 36\n $ : int 28\n $ : int [1:3] 27 28 30\n $ : int [1:3] 29 34 35\n $ : int [1:5] 24 26 33 35 38\n $ : int [1:4] 33 34 36 38\n $ : int [1:4] 27 30 35 37\n $ : int [1:2] 36 38\n $ : int [1:5] 24 26 34 35 37\n $ : int [1:3] 40 41 47\n $ : int [1:2] 39 41\n $ : int [1:3] 39 40 43\n $ : int [1:3] 43 52 53\n $ : int [1:4] 41 42 44 52\n $ : int [1:2] 43 45\n $ : int [1:2] 44 46\n $ : int 45\n $ : int 39\n $ : int [1:6] 7 8 9 49 50 54\n $ : int [1:6] 8 9 48 50 57 58\n $ : int [1:5] 48 49 51 52 54\n $ : int 50\n $ : int [1:4] 42 43 50 53\n $ : int [1:4] 42 52 54 55\n $ : int [1:4] 48 50 53 55\n $ : int [1:3] 25 53 54\n $ : int [1:5] 3 59 60 61 62\n $ : int [1:2] 49 58\n $ : int [1:9] 3 4 5 6 8 9 49 57 59\n $ : int [1:10] 1 2 3 4 5 6 56 58 60 61\n $ : int [1:9] 1 2 3 4 5 56 59 61 62\n $ : int [1:8] 1 2 3 4 56 59 60 62\n $ : int [1:4] 56 60 61 63\n $ : int 62\n $ : int [1:4] 65 68 73 74\n $ : int [1:5] 64 66 67 68 73\n $ : int [1:3] 65 67 68\n $ : int [1:2] 65 66\n $ : int [1:4] 64 65 66 69\n $ : int [1:2] 68 70\n $ : int 69\n $ : int [1:3] 72 74 75\n $ : int [1:3] 71 73 74\n $ : int [1:4] 64 65 72 74\n $ : int [1:4] 64 71 72 73\n $ : int [1:3] 71 76 77\n $ : int [1:2] 75 77\n $ : int [1:2] 75 76\n - attr(*, \"class\")= chr \"nb\"\n - attr(*, \"region.id\")= chr [1:77] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language dnearneigh(x = coords, d1 = 0, d2 = 111, longlat = TRUE)\n - attr(*, \"dnn\")= num [1:2] 0 111\n - attr(*, \"bounds\")= chr [1:2] \"GE\" \"LE\"\n - attr(*, \"nbtype\")= chr \"distance\"\n - attr(*, \"sym\")= logi TRUE\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(Thai_total_for_prov$ADM1_EN, card(wm_d111))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                          \n                           1 2 3 4 5 6 7 8 9 10 11 12 13 14\n  Amnat Charoen            0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Ang Thong                0 0 0 0 0 0 0 0 0  0  1  0  0  0\n  Bangkok                  0 0 0 0 0 0 0 0 0  0  0  1  0  0\n  Bueng Kan                0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Buri Ram                 0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Chachoengsao             0 0 0 0 0 0 0 0 1  0  0  0  0  0\n  Chai Nat                 0 0 0 0 0 0 1 0 0  0  0  0  0  0\n  Chaiyaphum               0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Chanthaburi              0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Chiang Mai               0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Chiang Rai               1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Chon Buri                0 0 0 0 0 1 0 0 0  0  0  0  0  0\n  Chumphon                 1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Kalasin                  0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Kamphaeng Phet           0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Kanchanaburi             0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Khon Kaen                0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Krabi                    0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Lampang                  0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Lamphun                  0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Loei                     1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Lop Buri                 0 0 0 0 0 0 1 0 0  0  0  0  0  0\n  Mae Hong Son             1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Maha Sarakham            0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Mukdahan                 0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Nakhon Nayok             0 0 0 0 0 0 0 0 0  1  0  0  0  0\n  Nakhon Pathom            0 0 0 0 0 0 0 0 0  1  0  0  0  0\n  Nakhon Phanom            0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Nakhon Ratchasima        1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Nakhon Sawan             0 0 0 0 0 1 0 0 0  0  0  0  0  0\n  Nakhon Si Thammarat      0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Nan                      0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Narathiwat               0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Nong Bua Lam Phu         0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Nong Khai                0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Nonthaburi               0 0 0 0 0 0 0 0 0  0  0  0  1  0\n  Pathum Thani             0 0 0 0 0 0 0 0 0  0  0  0  0  1\n  Pattani                  0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Phangnga                 0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Phatthalung              0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Phayao                   0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Phetchabun               0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Phetchaburi              0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Phichit                  0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Phitsanulok              0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Phra Nakhon Si Ayutthaya 0 0 0 0 0 0 0 0 0  0  0  0  1  0\n  Phrae                    0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Phuket                   0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Prachin Buri             0 0 0 0 0 1 0 0 0  0  0  0  0  0\n  Prachuap Khiri Khan      1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Ranong                   0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Ratchaburi               0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Rayong                   0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Roi Et                   0 0 0 0 1 0 0 0 0  0  0  0  0  0\n  Sa Kaeo                  0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Sakon Nakhon             0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Samut Prakan             0 0 0 0 0 0 0 0 0  1  0  0  0  0\n  Samut Sakhon             0 0 0 0 0 0 0 0 1  0  0  0  0  0\n  Samut Songkhram          0 0 0 0 0 0 0 1 0  0  0  0  0  0\n  Saraburi                 0 0 0 0 0 0 0 0 1  0  0  0  0  0\n  Satun                    0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Si Sa Ket                0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Sing Buri                0 0 0 0 0 0 0 0 0  1  0  0  0  0\n  Songkhla                 0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Sukhothai                0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Suphan Buri              0 0 0 0 0 0 0 0 1  0  0  0  0  0\n  Surat Thani              0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Surin                    0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Tak                      1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Trang                    0 0 0 1 0 0 0 0 0  0  0  0  0  0\n  Trat                     1 0 0 0 0 0 0 0 0  0  0  0  0  0\n  Ubon Ratchathani         0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Udon Thani               0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Uthai Thani              0 0 0 0 0 1 0 0 0  0  0  0  0  0\n  Uttaradit                0 0 1 0 0 0 0 0 0  0  0  0  0  0\n  Yala                     0 1 0 0 0 0 0 0 0  0  0  0  0  0\n  Yasothon                 0 0 1 0 0 0 0 0 0  0  0  0  0  0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nn_comp <- n.comp.nb(wm_d111)\nn_comp$nc\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 2\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntable(n_comp$comp.id)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n 1  2 \n63 14 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nplot(Thai_total_for_prov$geometry, border=\"lightgrey\", main=\"1st nearest neighbours\")\nplot(k1, coords, add=TRUE, col=\"red\", length=0.08)\nplot(Thai_total_for_prov$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d111, coords, add=TRUE, pch = 19, cex = 0.6)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-30-1.png){width=672}\n:::\n:::\n\n\n### Adaptive Distanace weight martix\n\nExamining if Adpative distance weight martrix will be more suitable for the Analysis:\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn6 <- knn2nb(knearneigh(coords, k=6))\nknn6\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 462 \nPercentage nonzero weights: 7.792208 \nAverage number of links: 6 \nNon-symmetric neighbours list\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(knn6)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nList of 77\n $ : int [1:6] 2 3 4 5 59 60\n $ : int [1:6] 1 3 4 11 59 60\n $ : int [1:6] 1 2 4 5 59 60\n $ : int [1:6] 1 2 3 5 17 59\n $ : int [1:6] 1 3 4 6 8 10\n $ : int [1:6] 4 5 8 9 10 58\n $ : int [1:6] 5 6 8 9 10 17\n $ : int [1:6] 5 6 7 9 10 58\n $ : int [1:6] 6 7 8 48 49 58\n $ : int [1:6] 4 5 6 7 8 17\n $ : int [1:6] 1 2 12 13 15 16\n $ : int [1:6] 2 11 13 14 15 16\n $ : int [1:6] 11 12 14 15 16 18\n $ : int [1:6] 11 12 13 15 16 18\n $ : int [1:6] 1 2 11 12 16 17\n $ : int [1:6] 4 10 11 15 17 18\n $ : int [1:6] 1 4 5 10 15 16\n $ : int [1:6] 13 15 16 17 19 20\n $ : int [1:6] 10 16 17 18 20 25\n $ : int [1:6] 18 19 21 22 33 34\n $ : int [1:6] 20 22 24 26 33 34\n $ : int [1:6] 20 21 23 24 26 34\n $ : int [1:6] 21 22 24 26 34 38\n $ : int [1:6] 22 23 26 34 35 38\n $ : int [1:6] 7 19 28 29 33 55\n $ : int [1:6] 22 23 24 34 35 38\n $ : int [1:6] 28 30 32 35 36 37\n $ : int [1:6] 25 29 30 31 32 35\n $ : int [1:6] 25 28 30 33 34 35\n $ : int [1:6] 27 28 29 32 35 36\n $ : int [1:6] 28 30 32 42 53 55\n $ : int [1:6] 27 28 30 31 35 36\n $ : int [1:6] 20 21 24 29 34 35\n $ : int [1:6] 21 24 26 33 35 38\n $ : int [1:6] 24 29 33 34 36 38\n $ : int [1:6] 27 30 32 35 37 38\n $ : int [1:6] 24 26 27 35 36 38\n $ : int [1:6] 24 26 34 35 36 37\n $ : int [1:6] 40 41 43 45 46 47\n $ : int [1:6] 39 41 43 47 51 52\n $ : int [1:6] 39 40 42 43 45 52\n $ : int [1:6] 31 41 43 44 52 53\n $ : int [1:6] 40 41 42 44 45 52\n $ : int [1:6] 31 41 42 43 45 46\n $ : int [1:6] 39 41 42 43 44 46\n $ : int [1:6] 39 40 41 43 44 45\n $ : int [1:6] 39 40 41 43 45 46\n $ : int [1:6] 7 8 9 49 50 54\n $ : int [1:6] 8 9 48 50 57 58\n $ : int [1:6] 48 49 51 52 53 54\n $ : int [1:6] 40 48 49 50 52 54\n $ : int [1:6] 41 42 43 50 51 53\n $ : int [1:6] 31 42 50 52 54 55\n $ : int [1:6] 9 48 50 52 53 55\n $ : int [1:6] 7 25 31 48 53 54\n $ : int [1:6] 1 3 59 60 61 62\n $ : int [1:6] 6 9 49 56 58 59\n $ : int [1:6] 5 6 8 9 49 59\n $ : int [1:6] 1 3 4 5 60 61\n $ : int [1:6] 1 2 3 56 59 61\n $ : int [1:6] 1 3 56 59 60 62\n $ : int [1:6] 3 56 59 60 61 63\n $ : int [1:6] 2 56 60 61 62 70\n $ : int [1:6] 65 66 67 68 73 74\n $ : int [1:6] 64 66 67 68 73 74\n $ : int [1:6] 64 65 67 68 69 73\n $ : int [1:6] 64 65 66 68 73 74\n $ : int [1:6] 64 65 66 67 69 70\n $ : int [1:6] 64 65 66 67 68 70\n $ : int [1:6] 63 64 65 66 68 69\n $ : int [1:6] 72 73 74 75 76 77\n $ : int [1:6] 64 71 73 74 75 76\n $ : int [1:6] 64 65 67 71 72 74\n $ : int [1:6] 64 65 71 72 73 75\n $ : int [1:6] 71 72 73 74 76 77\n $ : int [1:6] 71 72 73 74 75 77\n $ : int [1:6] 71 72 73 74 75 76\n - attr(*, \"region.id\")= chr [1:77] \"1\" \"2\" \"3\" \"4\" ...\n - attr(*, \"call\")= language knearneigh(x = coords, k = 6)\n - attr(*, \"sym\")= logi FALSE\n - attr(*, \"type\")= chr \"knn\"\n - attr(*, \"knn-k\")= num 6\n - attr(*, \"class\")= chr \"nb\"\n```\n\n\n:::\n:::\n\n\n\n### Plotting Adaptive Distance-based Neighbours\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npar(mfrow=c(1,2))\nplot(Thai_total_for_prov$geometry, border=\"lightgrey\",main=\"6 nearest neighbours\")\nplot(knn6, coords, pch = 19, cex = 0.6, add = TRUE, col = \"red\")\n\nplot(Thai_total_for_prov$geometry, border=\"lightgrey\", main=\"Distance link\")\nplot(wm_d111, coords, add=TRUE, pch = 19, cex = 0.6)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-33-1.png){width=672}\n:::\n:::\n\n\n\n### Weights based on IDW\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndist <- nbdists(wm_d111, coords, longlat = TRUE)\nids <- lapply(dist, function(x) 1/(x))\nids\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n [1] 0.046413915 0.033220882 0.030240349 0.015549299 0.010121521 0.009645788\n [7] 0.011152044 0.011280434 0.012985433 0.017019481 0.020074074 0.011959364\n\n[[2]]\n [1] 0.04641391 0.02003043 0.01925519 0.01173811 0.01437242 0.01292025\n [7] 0.01178643 0.01332537 0.01850899 0.01177683\n\n[[3]]\n [1] 0.033220882 0.020030425 0.028605483 0.020496673 0.012898506 0.009135287\n [7] 0.009723498 0.011096516 0.010200166 0.010696587 0.031941419 0.022846432\n[13] 0.013273634\n\n[[4]]\n [1] 0.030240349 0.019255190 0.028605483 0.028352781 0.013982995 0.009952248\n [7] 0.013918429 0.010525478 0.009564319 0.018047546 0.009552098 0.015509897\n[13] 0.013379572 0.009245049\n\n[[5]]\n [1] 0.01554930 0.01173811 0.02049667 0.02835278 0.02756509 0.01066480\n [7] 0.01522918 0.00975850 0.01630089 0.01408327 0.01339948 0.01533303\n[13] 0.01084021\n\n[[6]]\n [1] 0.01012152 0.01289851 0.01398300 0.02756509 0.01242005 0.03127482\n [7] 0.01510617 0.01388416 0.01005215 0.02029286 0.01224060\n\n[[7]]\n[1] 0.010664800 0.012420048 0.015632633 0.010571043 0.018342110 0.009750483\n[7] 0.009705201\n\n[[8]]\n [1] 0.009135287 0.009952248 0.015229183 0.031274815 0.015632633 0.023687661\n [7] 0.012698441 0.011395871 0.009504988 0.016885118\n\n[[9]]\n[1] 0.00975850 0.01510617 0.01057104 0.02368766 0.01608311 0.01570532 0.01681858\n\n[[10]]\n[1] 0.009645788 0.009723498 0.013918429 0.016300886 0.013884157 0.018342110\n[7] 0.012698441 0.010682343 0.020717010\n\n[[11]]\n[1] 0.011152044 0.014372420 0.022408853 0.009398570 0.019262215 0.009391342\n\n[[12]]\n[1] 0.02240885 0.01310247 0.01201705\n\n[[13]]\n[1] 0.009398570 0.013102472 0.013223766 0.009026604 0.009765844\n\n[[14]]\n[1] 0.01322377\n\n[[15]]\n[1] 0.011280434 0.012920254 0.010525478 0.019262215 0.012017050 0.009026604\n[7] 0.018323726 0.013713812 0.010089340\n\n[[16]]\n[1] 0.009564319 0.010682343 0.009391342 0.018323726 0.018187683 0.012788384\n\n[[17]]\n [1] 0.012985433 0.011786435 0.011096516 0.018047546 0.014083270 0.010052154\n [7] 0.009750483 0.020717010 0.013713812 0.018187683\n\n[[18]]\n[1] 0.009765844 0.010089340 0.012788384\n\n[[19]]\n[1] 0.01082169\n\n[[20]]\n[1] 0.01082169 0.01322693\n\n[[21]]\n[1] 0.01322693 0.01301572\n\n[[22]]\n[1] 0.01301572 0.01140961\n\n[[23]]\n[1] 0.01140961 0.01137165\n\n[[24]]\n[1] 0.02317374 0.01778413 0.01311993\n\n[[25]]\n[1] 0.01096390 0.01302628\n\n[[26]]\n[1] 0.01137165 0.02317374 0.01006419 0.01283122\n\n[[27]]\n[1] 0.01045130 0.01178442\n\n[[28]]\n[1] 0.011054506 0.015302325 0.013301389 0.009883523\n\n[[29]]\n[1] 0.01096390 0.01105451 0.01291681\n\n[[30]]\n[1] 0.015302325 0.017483864 0.009781624\n\n[[31]]\n[1] 0.01330139\n\n[[32]]\n[1] 0.010451301 0.009883523 0.017483864\n\n[[33]]\n[1] 0.01291681 0.01429388 0.01177517\n\n[[34]]\n[1] 0.017784128 0.010064193 0.014293885 0.012343675 0.009660859\n\n[[35]]\n[1] 0.01177517 0.01234368 0.01149312 0.01043721\n\n[[36]]\n[1] 0.011784417 0.009781624 0.011493123 0.015545066\n\n[[37]]\n[1] 0.01554507 0.01093475\n\n[[38]]\n[1] 0.013119927 0.012831217 0.009660859 0.010437208 0.010934747\n\n[[39]]\n[1] 0.01276386 0.01025301 0.01358915\n\n[[40]]\n[1] 0.01276386 0.01580618\n\n[[41]]\n[1] 0.01025301 0.01580618 0.01663804\n\n[[42]]\n[1] 0.014433186 0.009934394 0.011816759\n\n[[43]]\n[1] 0.016638036 0.014433186 0.009206376 0.009069811\n\n[[44]]\n[1] 0.009206376 0.012495409\n\n[[45]]\n[1] 0.01249541 0.01316508\n\n[[46]]\n[1] 0.01316508\n\n[[47]]\n[1] 0.01358915\n\n[[48]]\n[1] 0.009705201 0.011395871 0.016083111 0.012326369 0.010254426 0.014915995\n\n[[49]]\n[1] 0.009504988 0.015705321 0.012326369 0.009205562 0.010358229 0.010768191\n\n[[50]]\n[1] 0.010254426 0.009205562 0.011111643 0.009533663 0.011527636\n\n[[51]]\n[1] 0.01111164\n\n[[52]]\n[1] 0.009934394 0.009069811 0.009533663 0.010632695\n\n[[53]]\n[1] 0.011816759 0.010632695 0.012094889 0.009899588\n\n[[54]]\n[1] 0.01491600 0.01152764 0.01209489 0.01161453\n\n[[55]]\n[1] 0.013026280 0.009899588 0.011614531\n\n[[56]]\n[1] 0.01020017 0.01402864 0.01456357 0.02304288 0.01533490\n\n[[57]]\n[1] 0.01035823 0.01098260\n\n[[58]]\n[1] 0.010696587 0.009552098 0.013399485 0.020292859 0.016885118 0.016818578\n[7] 0.010768191 0.010982604 0.012579923\n\n[[59]]\n [1] 0.01701948 0.01332537 0.03194142 0.01550990 0.01533303 0.01224060\n [7] 0.01402864 0.01257992 0.02441318 0.01646786\n\n[[60]]\n[1] 0.02007407 0.01850899 0.02284643 0.01337957 0.01084021 0.01456357 0.02441318\n[8] 0.02941852 0.01061016\n\n[[61]]\n[1] 0.011959364 0.011776834 0.013273634 0.009245049 0.023042875 0.016467857\n[7] 0.029418523 0.016262271\n\n[[62]]\n[1] 0.015334899 0.010610160 0.016262271 0.009013905\n\n[[63]]\n[1] 0.009013905\n\n[[64]]\n[1] 0.011326537 0.009359481 0.010554311 0.009956219\n\n[[65]]\n[1] 0.01132654 0.01135774 0.01298463 0.00997081 0.01085922\n\n[[66]]\n[1] 0.01135774 0.01270911 0.01174163\n\n[[67]]\n[1] 0.01298463 0.01270911\n\n[[68]]\n[1] 0.009359481 0.009970810 0.011741631 0.009085630\n\n[[69]]\n[1] 0.00908563 0.01730698\n\n[[70]]\n[1] 0.01730698\n\n[[71]]\n[1] 0.01448029 0.01204058 0.01090219\n\n[[72]]\n[1] 0.01448029 0.01168217 0.01319298\n\n[[73]]\n[1] 0.01055431 0.01085922 0.01168217 0.01903968\n\n[[74]]\n[1] 0.009956219 0.012040582 0.013192981 0.019039684\n\n[[75]]\n[1] 0.01090219 0.01634790 0.01359979\n\n[[76]]\n[1] 0.01634790 0.01841909\n\n[[77]]\n[1] 0.01359979 0.01841909\n```\n\n\n:::\n:::\n\n\n\n### Row-Standardised Weights martix\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_d111 <- nb2listw(wm_d111, style=\"W\", zero.policy = TRUE)\nrswm_d111\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 350 \nPercentage nonzero weights: 5.903188 \nAverage number of links: 4.545455 \n2 disjoint connected subgraphs\n\nWeights style: W \nWeights constants summary:\n   n   nn S0       S1       S2\nW 77 5929 77 49.37234 320.9424\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_d111$weights[10]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n[1] 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111 0.1111111\n[8] 0.1111111 0.1111111\n```\n\n\n:::\n:::\n\n\n\n### a row standardised distance weight matrix by using the code chunk below.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_ids <- nb2listw(wm_d111, glist=ids, style=\"B\", zero.policy=TRUE)\nrswm_ids\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 350 \nPercentage nonzero weights: 5.903188 \nAverage number of links: 4.545455 \n2 disjoint connected subgraphs\n\nWeights style: B \nWeights constants summary:\n   n   nn       S0        S1       S2\nB 77 5929 4.959897 0.1615711 2.249762\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrswm_ids$weights[1]\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[[1]]\n [1] 0.046413915 0.033220882 0.030240349 0.015549299 0.010121521 0.009645788\n [7] 0.011152044 0.011280434 0.012985433 0.017019481 0.020074074 0.011959364\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(unlist(rswm_ids$weights))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n    Min.  1st Qu.   Median     Mean  3rd Qu.     Max. \n0.009014 0.010641 0.012709 0.014171 0.015612 0.046414 \n```\n\n\n:::\n:::\n\n\n\n## Spatial lag with row-standardized weights\nFinally, we’ll compute the average neighbor GDPPC value for each polygon. These values are often referred to as spatially lagged values.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_rev.lag <- lag.listw(rswm_d111, Thai_total_for_prov$total_for_revenue)\nTotal_rev.lag\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]  26372742183 141742764420  86319722423  80130369871  85744615092\n [6] 101601595109   1224806000   1109973470   1197995714 124166544744\n[11] 186485341667 100246853333  63681146000    667780000 157932314222\n[16]  50479650000 112264842470    436776667    385570000    801135000\n[21]    230450000    487045000     56570000    233056667    427415000\n[26]    377825000   1082065000   1150712500     29543333    722810000\n[31]      4300000    596430000    208936667    159874000    188755000\n[36]    535347500    337825000     95620000   1426283333  34237985000\n[41]  22701123333   1076320000    728100000    228275000   6481360000\n[46]    177920000  67625420000     40811667    588846667    456446000\n[51]    110330000    395632500    535622500    429282500    405240000\n[56]   1461507240     66590000   1559573800 112230000270 125369993800\n[61] 140024310525   4636472500   5851100000  50554822500 180238900000\n[66] 310504193333  75676205000  38084552500  54287605000    515730000\n[71]    469696667  16827800000  23511807500  13057225000  18317020000\n[76]   1471595000   1934215000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnb1 <- wm_d111[[1]]\nnb1 <- Thai_total_for_prov$total_for_revenue[nb1]\nnb1\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1]   4971250000    898464700   1569688000   7975590000     47170000\n [6]    249802000 299998120000     74660000    130190000    358861500\n[11]     19620000    179490000\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlag.list <- list(Thai_total_for_prov$ADM1_EN, lag.listw(rswm_d111, Thai_total_for_prov$total_for_revenue))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"ADM1_EN\", \"lag.total_for_revenue\")\nThai_total_for_prov<- left_join(Thai_total_for_prov,lag.res)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlag.list <- list(Thai_total_for_prov$ADM1_EN, lag.listw(rswm_d111,Thai_total_for_prov$total_no_for_tourist))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"ADM1_EN\", \"lag.total_no_for_tourist\")\nThai_total_for_prov<- left_join(Thai_total_for_prov,lag.res)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlag.list <- list(Thai_total_for_prov$ADM1_EN, lag.listw(rswm_d111,Thai_total_for_prov$Amt_rev_per_for_tourist))\nlag.res <- as.data.frame(lag.list)\ncolnames(lag.res) <- c(\"ADM1_EN\", \"lag.Amt_rev_per_for_tourist\")\nThai_total_for_prov<- left_join(Thai_total_for_prov,lag.res)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nhead(Thai_total_for_prov)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSimple feature collection with 6 features and 10 fields\nGeometry type: MULTIPOLYGON\nDimension:     XY\nBounding box:  xmin: 100.1913 ymin: 13.47842 xmax: 100.9639 ymax: 14.80246\nGeodetic CRS:  WGS 84\n  Shape_Leng Shape_Area                  ADM1_EN       date total_for_revenue\n1   2.417227 0.13133873                  Bangkok 2019-02-18      1.106223e+12\n2   1.695100 0.07926199             Samut Prakan 2019-02-18      4.971250e+09\n3   1.251111 0.05323766               Nonthaburi 2019-02-18      8.984647e+08\n4   1.884945 0.12698345             Pathum Thani 2019-02-18      1.569688e+09\n5   3.041716 0.21393797 Phra Nakhon Si Ayutthaya 2019-02-18      7.975590e+09\n6   1.739908 0.07920961                Ang Thong 2019-02-18      4.717000e+07\n  total_no_for_tourist Amt_rev_per_for_tourist lag.total_for_revenue\n1             44452634               24885.431           26372742183\n2              2183088                2277.164          141742764420\n3               403338                2227.573           86319722423\n4               750370                2091.885           80130369871\n5              2961839                2692.783           85744615092\n6                42073                1121.147          101601595109\n  lag.total_no_for_tourist lag.Amt_rev_per_for_tourist\n1                  1792514                    3617.747\n2                  6360611                    6300.092\n3                  3926935                    3849.991\n4                  3625298                    3837.289\n5                  3715284                    3765.752\n6                  4456800                    4217.550\n                        geometry\n1 MULTIPOLYGON (((100.6139 13...\n2 MULTIPOLYGON (((100.7306 13...\n3 MULTIPOLYGON (((100.3415 14...\n4 MULTIPOLYGON (((100.8916 14...\n5 MULTIPOLYGON (((100.5131 14...\n6 MULTIPOLYGON (((100.3332 14...\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_rev <- qtm(Thai_total_for_prov, \"total_no_for_tourist\")\nlag_Total_rev <- qtm(Thai_total_for_prov, \"lag.total_no_for_tourist\")\ntmap_arrange(Total_rev, lag_Total_rev, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-46-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_rev <- qtm(Thai_total_for_prov, \"Amt_rev_per_for_tourist\")\nlag_Total_rev <- qtm(Thai_total_for_prov, \"lag.Amt_rev_per_for_tourist\")\ntmap_arrange(Total_rev, lag_Total_rev, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-47-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nTotal_rev <- qtm(Thai_total_for_prov, \"total_for_revenue\")\nlag_Total_rev <- qtm(Thai_total_for_prov, \"lag.total_for_revenue\")\ntmap_arrange(Total_rev, lag_Total_rev, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-48-1.png){width=672}\n:::\n:::\n\n\n\n\n\n###Computing Global Moran’ I\n \nMoran’s I statistical test was pefromed  by using moran.test() of spdep. Moran’s I describe how features differ from the values in the study area as a whole. The Moran I statistic ranges from -1 to 1. If the Moran I is:\n\npositive (I>0): Clustered, observations tend to be similar\n\nnegative (I<0): Disperse, observations tend to be dissimilar\n\napproximately zero: observations arranged randomly over space\n\n\n#### For Total Revenue from Foregin. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(Thai_total_for_prov$total_for_revenue, \n           listw=rswm_d111, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  Thai_total_for_prov$total_for_revenue  \nweights: rswm_d111    \n\nMoran I statistic standard deviate = 1.0075, p-value = 0.1568\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.051767762      -0.013157895       0.004152612 \n```\n\n\n:::\n:::\n\n\n\n\nThe code below noted that the p-value is less than significant level at 0.05. Hence there is no relationship between the code.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbperm_tot = moran.mc(Thai_total_for_prov$total_for_revenue, \n         listw = rswm_d111,\n         nsim = 9999,\n         zero.policy = TRUE,\n         na.action = na.omit)\nbperm_tot\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  Thai_total_for_prov$total_for_revenue \nweights: rswm_d111  \nnumber of simulations + 1: 10000 \n\nstatistic = 0.051768, observed rank = 9197, p-value = 0.0803\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(Thai_total_for_prov$total_no_for_tourist, \n           listw=rswm_d111, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  Thai_total_for_prov$total_no_for_tourist  \nweights: rswm_d111    \n\nMoran I statistic standard deviate = 1.6558, p-value = 0.04888\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.084003244      -0.013157895       0.003443176 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbperm_noFor = moran.mc(Thai_total_for_prov$total_no_for_tourist, \n         listw = rswm_d111,\n         nsim = 9999,\n         zero.policy = TRUE,\n         na.action = na.omit)\nbperm_noFor\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  Thai_total_for_prov$total_no_for_tourist \nweights: rswm_d111  \nnumber of simulations + 1: 10000 \n\nstatistic = 0.084003, observed rank = 9393, p-value = 0.0607\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran.test(Thai_total_for_prov$Amt_rev_per_for_tourist, \n           listw=rswm_d111, \n           zero.policy = TRUE, \n           na.action=na.omit)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMoran I test under randomisation\n\ndata:  Thai_total_for_prov$Amt_rev_per_for_tourist  \nweights: rswm_d111    \n\nMoran I statistic standard deviate = 4.1302, p-value = 1.812e-05\nalternative hypothesis: greater\nsample estimates:\nMoran I statistic       Expectation          Variance \n      0.316242836      -0.013157895       0.006360718 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nbperm_Amt = moran.mc(Thai_total_for_prov$Amt_rev_per_for_tourist, \n         listw = rswm_d111,\n         nsim = 9999,\n         zero.policy = TRUE,\n         na.action = na.omit)\nbperm_Amt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Moran I\n\ndata:  Thai_total_for_prov$Amt_rev_per_for_tourist \nweights: rswm_d111  \nnumber of simulations + 1: 10000 \n\nstatistic = 0.31624, observed rank = 9966, p-value = 0.0034\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n\n\nThe Moran's I statistic of 0.31624 suggests a moderate positive spatial autocorrelation. This means that provinces in Thailand with higher revenue per tourist tend to be clustered together.\n\n\n\nThe statistical report on shows that the p-value is larger than alpha value of 0.05. Hence, we dont have  statistical evidence to reject the null hypothesis that the spatial distribution of total foreign spedning in Thailand may resemble random distribution (i.e. independent from spatial). Because the Moran’s I statistics is lesser than 0. We can infer that the spatial distribution shows sign of randomness and is not related to spatial.\n\n\n\n#### to be plotted later\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- as.data.frame(bperm_Amt$res)\ncolnames(df) <- c(\"Simulated Moran's I\")\n\nmoran_amt <- ggplot(df, aes(x=`Simulated Moran's I`)) + \n  geom_histogram(color = \"black\", fill = \"grey\", bins = 25) +\n  xlim(-0.1,0.6) + \n  ylab('Frequency') + \n  geom_vline(xintercept = 0, color = 'red') +\n  geom_vline(xintercept =  0.316242836 , color = 'blue') + \n  ggtitle(\"Histogram of Monte Carlo Simulated \\nMoran's I (Amount Spent per foregin tourist\") +\n  theme(plot.title = element_text(size = 10, hjust = 0.5)) +\n  annotate(\"text\", x = 0.35, y = 410, label = \"Actual Moran's I\", color = 'blue') \n\nmoran_amt\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-55-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(Thai_total_for_prov$total_for_revenue, listw = rswm_d111)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  Thai_total_for_prov$total_for_revenue \nweights: rswm_d111   \n\nGeary C statistic standard deviate = 0.31193, p-value = 0.3775\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.95090914        1.00000000        0.02476803 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(Thai_total_for_prov$Amt_rev_per_for_tourist, listw = rswm_d111)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  Thai_total_for_prov$Amt_rev_per_for_tourist \nweights: rswm_d111   \n\nGeary C statistic standard deviate = 3.1676, p-value = 0.0007686\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n        0.6052675         1.0000000         0.0155293 \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ngeary.test(Thai_total_for_prov$total_no_for_tourist, listw = rswm_d111)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tGeary C test under randomisation\n\ndata:  Thai_total_for_prov$total_no_for_tourist \nweights: rswm_d111   \n\nGeary C statistic standard deviate = 0.15041, p-value = 0.4402\nalternative hypothesis: Expectation greater than statistic\nsample estimates:\nGeary C statistic       Expectation          Variance \n       0.97495021        1.00000000        0.02773631 \n```\n\n\n:::\n:::\n\n\n\n\n\nComputing Monte Carlo Geary’s C\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbperm_G_Amt = geary.mc(Thai_total_for_prov$Amt_rev_per_for_tourist,\n                 listw = rswm_d111,\n                 nsim = 999)\nbperm_G_Amt\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n\n\tMonte-Carlo simulation of Geary C\n\ndata:  Thai_total_for_prov$Amt_rev_per_for_tourist \nweights: rswm_d111  \nnumber of simulations + 1: 1000 \n\nstatistic = 0.60527, observed rank = 2, p-value = 0.002\nalternative hypothesis: greater\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nmoran_corr_Amt<- sp.correlogram(knn6, #non-weighted spatial weights\n                          Thai_total_for_prov$Amt_rev_per_for_tourist,\n                          order = 6,\n                          method = 'I', #Moran's I\n                          style = 'W') #weighed\nplot(moran_corr_Amt)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-60-1.png){width=672}\n:::\n\n```{.r .cell-code}\nprint(moran_corr_Amt)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nSpatial correlogram for Thai_total_for_prov$Amt_rev_per_for_tourist \nmethod: Moran's I\n         estimate expectation   variance standard deviate Pr(I) two sided    \n1 (77)  0.2453865  -0.0131579  0.0027804           4.9032       9.427e-07 ***\n2 (77)  0.0738698  -0.0131579  0.0020621           1.9165         0.05531 .  \n3 (77)  0.0477061  -0.0131579  0.0019047           1.3946         0.16314    \n4 (77) -0.0017183  -0.0131579  0.0017711           0.2718         0.78576    \n5 (77)  0.0487384  -0.0131579  0.0016770           1.5115         0.13067    \n6 (77) -0.0481046  -0.0131579  0.0015967          -0.8746         0.38180    \n---\nSignif. codes:  0 '***' 0.001 '**' 0.01 '*' 0.05 '.' 0.1 ' ' 1\n```\n\n\n:::\n:::\n\n\n\n\n#### 10.4.3 Computing local Moran’s I\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(Thai_total_for_prov$Amt_rev_per_for_tourist)\nlocalMI <- localmoran(Thai_total_for_prov$Amt_rev_per_for_tourist, rswm_d111)\nhead(localMI)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n           Ii         E.Ii     Var.Ii       Z.Ii Pr(z != E(Ii))\n1 -0.79945538 -0.129839209 0.61863368 -0.8513520      0.3945739\n2 -0.08142930 -0.002888650 0.01951695 -0.5621970      0.5739818\n3  0.10359129 -0.002987109 0.01481762  0.8755480      0.3812758\n4  0.10931192 -0.003264935 0.01479610  0.9254978      0.3547070\n5  0.09285128 -0.002128342 0.01056678  0.9239725      0.3555006\n6  0.10366975 -0.005612861 0.03386023  0.5938901      0.5525856\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprintCoefmat(data.frame(\n  localMI[fips,], \n  row.names=Thai_total_for_prov$ADM1_EN[fips]),\n  check.names=FALSE)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n                                  Ii        E.Ii      Var.Ii        Z.Ii\nPattani                  -1.1459e-01 -5.7584e-03  1.4303e-01 -2.8776e-01\nAng Thong                 1.0367e-01 -5.6129e-03  3.3860e-02  5.9389e-01\nNong Bua Lam Phu          2.2813e-01 -5.5605e-03  1.0219e-01  7.3106e-01\nChai Nat                  3.0376e-01 -4.6751e-03  4.7091e-02  1.4213e+00\nSamut Songkhram          -4.6836e-02 -4.3454e-03  3.7756e-02 -2.1868e-01\nChachoengsao             -2.6271e-01 -4.3028e-03  3.2744e-02 -1.4280e+00\nLamphun                  -2.5432e-01 -4.1016e-03  1.5517e-01 -6.3521e-01\nNong Khai                 2.6455e-01 -4.0705e-03  1.0128e-01  8.4407e-01\nNakhon Phanom             2.3984e-01 -3.9054e-03  1.4778e-01  6.3407e-01\nSing Buri                 2.7645e-01 -3.8246e-03  2.5816e-02  1.7444e+00\nSamut Sakhon             -1.2555e-02 -3.7769e-03  2.8758e-02 -5.1764e-02\nSuphan Buri               2.4843e-01 -3.7623e-03  2.8647e-02  1.4900e+00\nLop Buri                  2.6624e-01 -3.7262e-03  3.7569e-02  1.3928e+00\nSaraburi                  2.2844e-02 -3.6808e-03  2.8029e-02  1.5843e-01\nBueng Kan                 2.5105e-01 -3.6642e-03  1.3868e-01  6.8400e-01\nPhichit                   2.0318e-01 -3.6016e-03  6.6318e-02  8.0297e-01\nUttaradit                 1.6941e-01 -3.3648e-03  8.3778e-02  5.9691e-01\nNakhon Sawan              2.5830e-01 -3.3224e-03  3.9663e-02  1.3137e+00\nNakhon Pathom             7.2667e-02 -3.2806e-03  2.2156e-02  5.1023e-01\nPathum Thani              1.0931e-01 -3.2649e-03  1.4796e-02  9.2550e-01\nMaha Sarakham             1.8593e-01 -3.2442e-03  8.0785e-02  6.6558e-01\nKamphaeng Phet            1.9252e-01 -3.1626e-03  4.5961e-02  9.1275e-01\nMukdahan                  2.1262e-01 -3.0974e-03  4.5016e-02  1.0167e+00\nPhayao                   -1.9352e-01 -3.0813e-03  1.1669e-01 -5.5750e-01\nNonthaburi                1.0359e-01 -2.9871e-03  1.4818e-02  8.7555e-01\nPhatthalung              -1.2449e-01 -2.9558e-03  5.4461e-02 -5.2077e-01\nSamut Prakan             -8.1429e-02 -2.8886e-03  1.9517e-02 -5.6220e-01\nChaiyaphum                1.3412e-01 -2.8884e-03  1.0940e-01  4.1422e-01\nRoi Et                    2.0213e-01 -2.8802e-03  4.1868e-02  1.0019e+00\nRatchaburi                1.4897e-01 -2.6999e-03  3.9255e-02  7.6551e-01\nYasothon                  1.9401e-01 -2.5723e-03  6.4097e-02  7.7649e-01\nSa Kaeo                   9.7054e-02 -2.3492e-03  5.8550e-02  4.1081e-01\nSurin                     1.4499e-01 -2.2140e-03  8.3915e-02  5.0815e-01\nSi Sa Ket                 1.2147e-01 -2.2121e-03  8.3843e-02  4.2713e-01\nUthai Thani               1.8663e-01 -2.1408e-03  2.5587e-02  1.1801e+00\nPhra Nakhon Si Ayutthaya  9.2851e-02 -2.1283e-03  1.0567e-02  9.2397e-01\nSakon Nakhon              1.6746e-01 -2.0560e-03  3.7916e-02  8.7057e-01\nPhrae                     9.6788e-02 -1.8907e-03  3.4875e-02  5.2840e-01\nKalasin                   1.7202e-01 -1.8303e-03  3.3762e-02  9.4615e-01\nAmnat Charoen             1.4329e-01 -1.7371e-03  3.2047e-02  8.1016e-01\nSukhothai                 1.4616e-01 -1.6607e-03  3.0638e-02  8.4452e-01\nLoei                      2.0536e-01 -1.3131e-03  1.0098e-01  6.5040e-01\nBuri Ram                  9.2148e-02 -1.1598e-03  4.4006e-02  4.4480e-01\nPhetchabun                1.2203e-01 -1.1065e-03  2.7613e-02  7.4100e-01\nKhon Kaen                 1.5210e-01 -1.0502e-03  2.6210e-02  9.4602e-01\nNakhon Nayok              3.1905e-02 -1.0330e-03  6.9926e-03  3.9390e-01\nPhitsanulok               1.1328e-01 -9.6393e-04  1.7796e-02  8.5640e-01\nUdon Thani                1.3299e-01 -8.1649e-04  2.0381e-02  9.3724e-01\nNakhon Ratchasima         6.2512e-02 -5.8334e-04  4.4891e-02  2.9780e-01\nNakhon Si Thammarat      -2.0195e-01 -4.7004e-04  8.6823e-03 -2.1623e+00\nUbon Ratchathani          7.0491e-02 -4.3726e-04  1.6603e-02  5.5047e-01\nTak                       8.7802e-02 -4.2203e-04  3.2482e-02  4.8951e-01\nPrachin Buri             -3.3085e-03 -2.9059e-04  3.4796e-03 -5.1161e-02\nYala                      4.8842e-02 -2.0620e-04  7.8314e-03  5.5424e-01\nNarathiwat                4.6718e-02 -1.8560e-04  7.0489e-03  5.5866e-01\nKanchanaburi              5.3225e-02 -1.6943e-04  6.4349e-03  6.6562e-01\nLampang                  -1.6864e-03 -9.6259e-05  2.4045e-03 -3.2428e-02\nNan                       3.2285e-02 -7.3659e-05  2.7979e-03  6.1175e-01\nSatun                    -1.8910e-02 -6.0923e-05  1.5219e-03 -4.8316e-01\nChanthaburi               2.0069e-02 -1.2956e-05  1.8887e-04  1.4613e+00\nChumphon                  2.5527e-02 -2.5567e-04  1.9682e-02  1.8378e-01\nRanong                    2.2692e-01 -4.4125e-04  1.6754e-02  1.7565e+00\nMae Hong Son              2.9504e-01 -1.1533e-03  8.8703e-02  9.9449e-01\nRayong                    2.1776e-01 -1.5642e-03  3.9016e-02  1.1104e+00\nPhetchaburi              -7.3425e-02 -2.5696e-03  4.7365e-02 -3.2557e-01\nTrang                     1.5424e-01 -3.8950e-03  7.1700e-02  5.9058e-01\nSongkhla                 -3.0634e-01 -7.6719e-03  1.9019e-01 -6.8484e-01\nChiang Rai               -4.2325e-01 -1.0065e-02  7.6724e-01 -4.7171e-01\nPrachuap Khiri Khan       3.9720e-01 -1.0630e-02  8.0981e-01  4.5320e-01\nChiang Mai               -1.1553e-01 -1.3067e-02  3.2218e-01 -1.8052e-01\nPhangnga                  3.8646e+00 -1.7556e-02  4.3089e-01  5.9141e+00\nTrat                      4.4317e-02 -2.6245e-02  1.9678e+00  5.0301e-02\nKrabi                     3.6114e+00 -4.5766e-02  6.3667e-01  4.5834e+00\nSurat Thani               1.7625e+00 -7.1979e-02  1.2344e+00  1.6511e+00\nChon Buri                 9.4504e-01 -7.8029e-02  8.6168e-01  1.1021e+00\nBangkok                  -7.9946e-01 -1.2984e-01  6.1863e-01 -8.5135e-01\nPhuket                    8.8083e+00 -4.4770e-01  9.3928e+00  3.0201e+00\n                         Pr.z....E.Ii..\nPattani                          0.7735\nAng Thong                        0.5526\nNong Bua Lam Phu                 0.4647\nChai Nat                         0.1552\nSamut Songkhram                  0.8269\nChachoengsao                     0.1533\nLamphun                          0.5253\nNong Khai                        0.3986\nNakhon Phanom                    0.5260\nSing Buri                        0.0811\nSamut Sakhon                     0.9587\nSuphan Buri                      0.1362\nLop Buri                         0.1637\nSaraburi                         0.8741\nBueng Kan                        0.4940\nPhichit                          0.4220\nUttaradit                        0.5506\nNakhon Sawan                     0.1890\nNakhon Pathom                    0.6099\nPathum Thani                     0.3547\nMaha Sarakham                    0.5057\nKamphaeng Phet                   0.3614\nMukdahan                         0.3093\nPhayao                           0.5772\nNonthaburi                       0.3813\nPhatthalung                      0.6025\nSamut Prakan                     0.5740\nChaiyaphum                       0.6787\nRoi Et                           0.3164\nRatchaburi                       0.4440\nYasothon                         0.4375\nSa Kaeo                          0.6812\nSurin                            0.6113\nSi Sa Ket                        0.6693\nUthai Thani                      0.2379\nPhra Nakhon Si Ayutthaya         0.3555\nSakon Nakhon                     0.3840\nPhrae                            0.5972\nKalasin                          0.3441\nAmnat Charoen                    0.4178\nSukhothai                        0.3984\nLoei                             0.5154\nBuri Ram                         0.6565\nPhetchabun                       0.4587\nKhon Kaen                        0.3441\nNakhon Nayok                     0.6937\nPhitsanulok                      0.3918\nUdon Thani                       0.3486\nNakhon Ratchasima                0.7659\nNakhon Si Thammarat              0.0306\nUbon Ratchathani                 0.5820\nTak                              0.6245\nPrachin Buri                     0.9592\nYala                             0.5794\nNarathiwat                       0.5764\nKanchanaburi                     0.5057\nLampang                          0.9741\nNan                              0.5407\nSatun                            0.6290\nChanthaburi                      0.1439\nChumphon                         0.8542\nRanong                           0.0790\nMae Hong Son                     0.3200\nRayong                           0.2668\nPhetchaburi                      0.7447\nTrang                            0.5548\nSongkhla                         0.4934\nChiang Rai                       0.6371\nPrachuap Khiri Khan              0.6504\nChiang Mai                       0.8567\nPhangnga                         0.0000\nTrat                             0.9599\nKrabi                            0.0000\nSurat Thani                      0.0987\nChon Buri                        0.2704\nBangkok                          0.3946\nPhuket                           0.0025\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov.localMI <- cbind(Thai_total_for_prov,localMI) %>%\n  rename(Pr.Ii = Pr.z....E.Ii..)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(Thai_total_for_prov.localMI) +\n  tm_fill(col = \"Ii\", \n          style = \"pretty\",\n          palette = \"RdBu\",\n          title = \"local moran statistics\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-64-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntm_shape(Thai_total_for_prov.localMI) +\n  tm_fill(col = \"Pr.Ii\", \n          breaks=c(-Inf, 0.001, 0.01, 0.05, 0.1, Inf),\n          palette=\"-Blues\", \n          title = \"local Moran's I p-values\") +\n  tm_borders(alpha = 0.5)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-65-1.png){width=672}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nnci <- moran.plot(Thai_total_for_prov$lag.Amt_rev_per_for_tourist, rswm_d111,\n                  labels=as.character(Thai_total_for_prov$ADM1_EN), \n                  xlab=\"Total Revenue 2019 to 2024\", \n                  ylab=\"Total Revenue 2019 to 2024\")\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-66-1.png){width=672}\n:::\n:::\n\n\n#Lisa Map:\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n#Step 1\nquadrant <- vector(mode=\"numeric\",length=nrow(localMI))\n#Step 2\nThai_total_for_prov$Amt_rev_per_for_tourist <- lag.listw(rswm_d111, Thai_total_for_prov$Amt_rev_per_for_tourist)\nDV <- Thai_total_for_prov$Amt_rev_per_for_tourist - mean(Thai_total_for_prov$Amt_rev_per_for_tourist)     \n#Step 3\nLM_I <- localMI[,1] - mean(localMI[,1])\n#Step 4\nsignif <- 0.05\n#Step 5\nquadrant[DV <0 & LM_I>0] <- 1 #low-low\nquadrant[DV >0 & LM_I<0] <- 2 #high-low\nquadrant[DV <0 & LM_I<0] <- 3 #low-high\nquadrant[DV >0 & LM_I>0] <- 4 #high-high\n#Step 6\nquadrant[localMI[,5]>signif]<- 0\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov.localMI$quadrant <- quadrant\ncolors <- c(\"#ffffff\", \"#2c7bb6\", \"#abd9e9\", \"#fdae61\", \"#d7191c\")\nclusters <- c(\"insignificant\", \"low-low\", \"low-high\", \"high-low\", \"high-high\")\n\nLISAmap <- tm_shape(Thai_total_for_prov.localMI) +\n  tm_fill(col = \"quadrant\", \n          style = \"cat\", \n          palette = colors[c(sort(unique(quadrant)))+1], \n          labels = clusters[c(sort(unique(quadrant)))+1],\n          popup.vars = c(\"\")) +\n  tm_view(set.zoom.limits = c(11,17)) +\n  tm_borders(alpha=0.5)\n\ntmap_arrange(Total_rev, LISAmap, \n             asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-68-1.png){width=672}\n:::\n:::\n\n\n\n\nWe can also include the local Moran’s I map and p-value map as shown below for easy comparison.\n\n## 5.2.2 Hot Spot Area Analysis\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nknn_lw <- nb2listw(knn6,\n                   style = \"B\",\n                   zero.policy = TRUE)\nknn_lw\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCharacteristics of weights list object:\nNeighbour list object:\nNumber of regions: 77 \nNumber of nonzero links: 462 \nPercentage nonzero weights: 7.792208 \nAverage number of links: 6 \nNon-symmetric neighbours list\n\nWeights style: B \nWeights constants summary:\n   n   nn  S0  S1    S2\nB 77 5929 462 820 11500\n```\n\n\n:::\n:::\n\n\n\n## Gi statistics using fixed distance\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(Thai_total_for_prov$ADM1_EN)\ngi.fixed <- localG(Thai_total_for_prov$Amt_rev_per_for_tourist, knn_lw)\ngi.fixed\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n [1] -0.240709841 -0.092854385 -0.263147763 -0.352344270 -0.759758999\n [6] -1.133928940 -0.883587167 -1.107855016 -1.573885578 -0.966758224\n[11]  1.302976954  1.349591934  1.077316088  1.438006646  0.762965325\n[16]  0.338198636 -0.003039446  0.429865685 -0.470380151 -1.144409249\n[21] -1.320827910 -1.362925987 -1.393495005 -1.433803860 -1.471691950\n[26] -1.460021945 -1.619150613 -1.781573316 -1.460869377 -1.650051757\n[31] -1.533205921 -1.757762325 -1.512115319 -1.467464857 -1.591678929\n[36] -1.707294480 -1.581212506 -1.553550188  0.917655935  0.033031831\n[41]  0.006574965 -1.254283357 -0.034416696 -0.704759521 -0.858259710\n[46]  0.201310856  0.247485846 -1.675487769 -1.735145008 -1.612979583\n[51] -0.978465783 -1.077840302 -1.557432884 -1.600646395 -1.662646426\n[56] -0.286001913 -1.212302815 -1.179109096 -0.367413351 -0.275473316\n[61] -0.534560696  0.074155711  0.180017254  5.675033786  5.387484138\n[66]  6.084148349  5.512303933  6.394025029  6.200933968  5.975571543\n[71]  0.298653773  0.850021776  3.262326683  2.392966107 -0.050244002\n[76]  0.291916914  0.293877483\nattr(,\"internals\")\n              Gi      E(Gi)        V(Gi)        Z(Gi) Pr(z != E(Gi))\n [1,] 0.07286395 0.07894737 0.0006387159 -0.240709841   8.097800e-01\n [2,] 0.07658396 0.07894737 0.0006478473 -0.092854385   9.260192e-01\n [3,] 0.07229124 0.07894737 0.0006397994 -0.263147763   7.924367e-01\n [4,] 0.07003549 0.07894737 0.0006397415 -0.352344270   7.245801e-01\n [5,] 0.05973564 0.07894737 0.0006394127 -0.759758999   4.473987e-01\n [6,] 0.05022958 0.07894737 0.0006414019 -1.133928940   2.568244e-01\n [7,] 0.05676665 0.07894737 0.0006301622 -0.883587167   3.769191e-01\n [8,] 0.05114781 0.07894737 0.0006296658 -1.107855016   2.679244e-01\n [9,] 0.03944966 0.07894737 0.0006297924 -1.573885578   1.155139e-01\n[10,] 0.05441090 0.07894737 0.0006441520 -0.966758224   3.336649e-01\n[11,] 0.11215614 0.07894737 0.0006495792  1.302976954   1.925826e-01\n[12,] 0.11333367 0.07894737 0.0006491813  1.349591934   1.771469e-01\n[13,] 0.10639515 0.07894737 0.0006491248  1.077316088   2.813391e-01\n[14,] 0.11548631 0.07894737 0.0006456397  1.438006646   1.504322e-01\n[15,] 0.09839514 0.07894737 0.0006497258  0.762965325   4.454841e-01\n[16,] 0.08753968 0.07894737 0.0006454700  0.338198636   7.352135e-01\n[17,] 0.07887032 0.07894737 0.0006425336 -0.003039446   9.975749e-01\n[18,] 0.08981750 0.07894737 0.0006394467  0.429865685   6.672933e-01\n[19,] 0.06707169 0.07894737 0.0006374103 -0.470380151   6.380834e-01\n[20,] 0.05006423 0.07894737 0.0006369802 -1.144409249   2.524540e-01\n[21,] 0.04564894 0.07894737 0.0006355577 -1.320827910   1.865588e-01\n[22,] 0.04453704 0.07894737 0.0006374308 -1.362925987   1.729058e-01\n[23,] 0.04384870 0.07894737 0.0006344106 -1.393495005   1.634702e-01\n[24,] 0.04288714 0.07894737 0.0006325246 -1.433803860   1.516282e-01\n[25,] 0.04178184 0.07894737 0.0006377446 -1.471691950   1.411041e-01\n[26,] 0.04218092 0.07894737 0.0006341392 -1.460021945   1.442840e-01\n[27,] 0.03827080 0.07894737 0.0006311231 -1.619150613   1.054149e-01\n[28,] 0.03403041 0.07894737 0.0006356430 -1.781573316   7.481884e-02\n[29,] 0.04231984 0.07894737 0.0006286261 -1.460869377   1.440513e-01\n[30,] 0.03757047 0.07894737 0.0006288117 -1.650051757   9.893235e-02\n[31,] 0.04065408 0.07894737 0.0006237984 -1.533205921   1.252251e-01\n[32,] 0.03478842 0.07894737 0.0006311276 -1.757762325   7.878796e-02\n[33,] 0.04084812 0.07894737 0.0006348381 -1.512115319   1.305045e-01\n[34,] 0.04203326 0.07894737 0.0006327752 -1.467464857   1.422496e-01\n[35,] 0.03894330 0.07894737 0.0006316804 -1.591678929   1.114569e-01\n[36,] 0.03598986 0.07894737 0.0006330839 -1.707294480   8.776733e-02\n[37,] 0.03918149 0.07894737 0.0006324710 -1.581212506   1.138295e-01\n[38,] 0.03987486 0.07894737 0.0006325458 -1.553550188   1.202917e-01\n[39,] 0.10220743 0.07894737 0.0006424834  0.917655935   3.587990e-01\n[40,] 0.07978934 0.07894737 0.0006497234  0.033031831   9.736492e-01\n[41,] 0.07911441 0.07894737 0.0006454220  0.006574965   9.947540e-01\n[42,] 0.04731117 0.07894737 0.0006361761 -1.254283357   2.097390e-01\n[43,] 0.07807758 0.07894737 0.0006386911 -0.034416696   9.725449e-01\n[44,] 0.06121885 0.07894737 0.0006327952 -0.704759521   4.809599e-01\n[45,] 0.05707238 0.07894737 0.0006496185 -0.858259710   3.907491e-01\n[46,] 0.08400346 0.07894737 0.0006308059  0.201310856   8.404555e-01\n[47,] 0.08522658 0.07894737 0.0006437386  0.247485846   8.045322e-01\n[48,] 0.03690581 0.07894737 0.0006296150 -1.675487769   9.383857e-02\n[49,] 0.03533947 0.07894737 0.0006316241 -1.735145008   8.271512e-02\n[50,] 0.03832720 0.07894737 0.0006341991 -1.612979583   1.067489e-01\n[51,] 0.05437720 0.07894737 0.0006305579 -0.978465783   3.278440e-01\n[52,] 0.05181814 0.07894737 0.0006335286 -1.077840302   2.811050e-01\n[53,] 0.03975478 0.07894737 0.0006332706 -1.557432884   1.193677e-01\n[54,] 0.03863294 0.07894737 0.0006343519 -1.600646395   1.094553e-01\n[55,] 0.03710981 0.07894737 0.0006331882 -1.662646426   9.638323e-02\n[56,] 0.07173253 0.07894737 0.0006363788 -0.286001913   7.748767e-01\n[57,] 0.04848547 0.07894737 0.0006313812 -1.212302815   2.253965e-01\n[58,] 0.04931553 0.07894737 0.0006315520 -1.179109096   2.383547e-01\n[59,] 0.06963981 0.07894737 0.0006417432 -0.367413351   7.133107e-01\n[60,] 0.07194855 0.07894737 0.0006454920 -0.275473316   7.829526e-01\n[61,] 0.06535531 0.07894737 0.0006465119 -0.534560696   5.929537e-01\n[62,] 0.08082514 0.07894737 0.0006412068  0.074155711   9.408865e-01\n[63,] 0.08353590 0.07894737 0.0006497099  0.180017254   8.571390e-01\n[64,] 0.22273569 0.07894737 0.0006419635  5.675033786   1.386613e-08\n[65,] 0.21107974 0.07894737 0.0006015150  5.387484138   7.145078e-08\n[66,] 0.20868397 0.07894737 0.0004547005  6.084148349   1.171121e-09\n[67,] 0.21684934 0.07894737 0.0006258563  5.512303933   3.541666e-08\n[68,] 0.24171481 0.07894737 0.0006480170  6.394025029   1.615750e-10\n[69,] 0.23542860 0.07894737 0.0006368106  6.200933968   5.612906e-10\n[70,] 0.23105621 0.07894737 0.0006479627  5.975571543   2.292849e-09\n[71,] 0.08646667 0.07894737 0.0006338966  0.298653773   7.652042e-01\n[72,] 0.10060090 0.07894737 0.0006489293  0.850021776   3.953130e-01\n[73,] 0.16205508 0.07894737 0.0006489746  3.262326683   1.105017e-03\n[74,] 0.13989989 0.07894737 0.0006487991  2.392966107   1.671278e-02\n[75,] 0.07766852 0.07894737 0.0006478400 -0.050244002   9.599279e-01\n[76,] 0.08629932 0.07894737 0.0006342884  0.291916914   7.703502e-01\n[77,] 0.08634803 0.07894737 0.0006341749  0.293877483   7.688515e-01\nattr(,\"cluster\")\n [1] Low  High Low  Low  Low  Low  Low  Low  Low  High High High High High High\n[16] High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low \n[31] Low  Low  Low  Low  Low  Low  Low  Low  Low  High High Low  Low  Low  High\n[46] Low  High Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  Low  High\n[61] High Low  High High High High High High High High Low  High High High High\n[76] Low  Low \nLevels: Low High\nattr(,\"gstari\")\n[1] FALSE\nattr(,\"call\")\nlocalG(x = Thai_total_for_prov$Amt_rev_per_for_tourist, listw = knn_lw)\nattr(,\"class\")\n[1] \"localG\"\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_total_for_prov.gi <- cbind(Thai_total_for_prov, as.matrix(gi.fixed)) %>%\n  rename(gstat_fixed = as.matrix.gi.fixed.)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGimap <-tm_shape(Thai_total_for_prov.gi) +\n  tm_fill(col = \"gstat_fixed\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\ntmap_arrange(Total_rev, Gimap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-72-1.png){width=672}\n:::\n:::\n\n\n\n\n### Gi statistics using adaptive distance\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nfips <- order(Thai_total_for_prov$ADM1_EN)\ngi.adaptive <- localG(Thai_total_for_prov$Amt_rev_per_for_tourist, knn_lw)\nThai_total_for_pro_adp.gi <- cbind(Thai_total_for_prov, as.matrix(gi.adaptive)) %>%\n  rename(gstat_adaptive = as.matrix.gi.adaptive.)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nGimap_adap <-tm_shape(Thai_total_for_pro_adp.gi) +\n  tm_fill(col = \"gstat_adaptive\", \n          style = \"pretty\",\n          palette=\"-RdBu\",\n          title = \"local Gi\") +\n  tm_borders(alpha = 0.5)\n\ntmap_arrange(Gimap_adap, Gimap, asp=1, ncol=2)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-74-1.png){width=672}\n:::\n:::\n\n\n\n\n## Time Series\n\n\n::: {.cell}\n\n```{.r .cell-code}\n Tourdata_st <- spacetime(tour_data_wide, SAB_1,\n                      .loc_col = \"ADM1_EN\",\n                      .time_col = \"Date_tour\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nis_spacetime_cube(Tourdata_st)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] TRUE\n```\n\n\n:::\n:::\n\n\n### Emergering Hotspot\n\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <- emerging_hotspot_analysis(\n  x = Tourdata_st, \n  .var = \"revenue_foreign\", \n  k = 1, \n  nsim = 99\n)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(ehsa ,\"data/rds/ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa <-read_rds(\"data/rds/ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_ehsa <- SAB_1 %>%\n  left_join(ehsa,\n            by = join_by(ADM1_EN== location))\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nwrite_rds(Thai_ehsa ,\"data/rds/Thai_ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nThai_ehsa<-read_rds(\"data/rds/Thai_ehsa.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nehsa_sig <- Thai_ehsa  %>%\n  filter(p_value < 0.05)\ntmap_mode(\"plot\")\ntm_shape(Thai_ehsa) +\n  tm_polygons() +\n  tm_borders(alpha = 0.5) +\ntm_shape(ehsa_sig) +\n  tm_fill(\"classification\") + \n  tm_borders(alpha = 0.4)\n```\n\n::: {.cell-output-display}\n![](Take_home_02_files/figure-html/unnamed-chunk-83-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "Take_home_02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}