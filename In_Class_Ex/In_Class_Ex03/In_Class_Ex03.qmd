---
title: "In Class Exercise 03"
author: "Dew Stella Chan"
date-modified: "last-modified"
execute: 
  execute: 
  eval: true
  echo: true
  message: false
  freeze: true
  warning: false
---

```{r}
pacman:: p_load(sf, spNetwork, tmap, tidyverse)
set.seed(1234) #set seed to ensure the result is consistant
```

```{r}
network<- st_read(dsn = "data/rawdata", layer ="Punggol_St") %>% st_transform( crs = 3414)
```

```{r}
childcare <- st_read (dsn= "data/rawdata", layer="Punggol_CC") %>%
    st_transform( crs = 3414) %>% st_zm(childcare, drop = TRUE, what = "ZM")
```

```{r}
tmap_mode('plot')
tm_shape(childcare) + 
  tm_dots("red") + 
  tm_shape(network) +
  tm_lines()
tmap_mode('plot') #to keep it as plot to keep it light.
```

Split the road into line segements.

```{r}
lixels <- lixelize_lines(network, 700, 
                         mindist = 350)
#reasonable walking distance in Singapore base on one of the research by NTU, set as half of this
#min distance is the distance which is retained.
```

```{r}
lixels <- lixelize_lines(network, 1000, 
                         mindist = 150)
#changing parameters tp see the differences between the network and the lixels 
```

```{r}
samples <- lines_center(lixels)
```

```{r}
tmap_mode('plot')
tm_shape(lixels) + 
  tm_lines() + 
  tm_shape(samples) +
  tm_dots(size=0.001)
tmap_mode('plot') #to keep it as plot to keep it light.
```

```{r}
#performing NkDE using the code
densities <- nkde(network, 
                  events = childcare,
                  w = rep(1, nrow(childcare)),
                  samples = samples,#as lixels and samples are not sorted
                  kernel_name = "quartic",
                  bw = 300, 
                  div= "bw", 
                  method = "simple", 
                  digits = 1, 
                  tol = 1,
                  grid_shape = c(1,1), 
                  max_depth = 8,
                  agg = 5, 
                  sparse = TRUE,
                  verbose = FALSE)
```

Added the density to the dataframe It can be appended back as the dataframes (samples and lixels are not sorted)

If we want to shade the points on the map, we will use samples. If we want to shade the lines then we will shade use lixels

```{r}
samples$density <- densities
lixels$density <- densities
```

Since the density is very small and it is in length and scale it up.

```{r}
# re-scaling to help the mapping
samples$density <- samples$density*1000
lixels$density <- lixels$density*1000
```

```{r}
# To prepare interactive and high cartographic quality map visualization
tmap_mode('plot')
tm_shape(lixels) +
  tm_lines(col = "density") +
tm_shape(childcare)+
  tm_dots()
tmap_mode('plot')
```

Although the sytax indicates k functions, the algothrim is based on g functions.

```{r}
#k function
kfun_childcare <- kfunctions(network, 
                             childcare,
                             start = 0, 
                             end = 1000, 
                             step = 50, 
                             width = 50, 
                             nsim = 49, # 50 simulation, start from 0.
                             resolution = 50,
                             verbose = FALSE, 
                             conf_int = 0.05)

kfun_childcare$plotk
#plot K, show signs of regularity at a nearer distances.  
kfun_childcare$plotg#plot g
```
